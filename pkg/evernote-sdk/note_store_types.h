/**
 * Autogenerated by Thrift Compiler (0.14.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef NOTE_STORE_TYPES_H
#define NOTE_STORE_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>
/* other thrift includes */
#include "user_store_types.h"
#include "types_types.h"
#include "errors_types.h"
#include "limits_types.h"

/* custom thrift includes */

/* begin types */

enum _ShareRelationshipPrivilegeLevel {
  SHARE_RELATIONSHIP_PRIVILEGE_LEVEL_READ_NOTEBOOK = 0,
  SHARE_RELATIONSHIP_PRIVILEGE_LEVEL_READ_NOTEBOOK_PLUS_ACTIVITY = 10,
  SHARE_RELATIONSHIP_PRIVILEGE_LEVEL_MODIFY_NOTEBOOK_PLUS_ACTIVITY = 20,
  SHARE_RELATIONSHIP_PRIVILEGE_LEVEL_FULL_ACCESS = 30
};
typedef enum _ShareRelationshipPrivilegeLevel ShareRelationshipPrivilegeLevel;

/* return the name of the constant */
const char *
toString_ShareRelationshipPrivilegeLevel(int value); 

/* struct SyncState */
struct _SyncState
{ 
  ThriftStruct parent; 

  /* public */
  gint64 currentTime;
  gint64 fullSyncBefore;
  gint32 updateCount;
  gint64 uploaded;
  gboolean __isset_uploaded;
  gint64 userLastUpdated;
  gboolean __isset_userLastUpdated;
  gint64 userMaxMessageEventId;
  gboolean __isset_userMaxMessageEventId;
};
typedef struct _SyncState SyncState;

struct _SyncStateClass
{
  ThriftStructClass parent;
};
typedef struct _SyncStateClass SyncStateClass;

GType sync_state_get_type (void);
#define TYPE_SYNC_STATE (sync_state_get_type())
#define SYNC_STATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SYNC_STATE, SyncState))
#define SYNC_STATE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SYNC_STATE, SyncStateClass))
#define IS_SYNC_STATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SYNC_STATE))
#define IS_SYNC_STATE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SYNC_STATE))
#define SYNC_STATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SYNC_STATE, SyncStateClass))

/* struct SyncChunk */
struct _SyncChunk
{ 
  ThriftStruct parent; 

  /* public */
  gint64 currentTime;
  gint32 chunkHighUSN;
  gboolean __isset_chunkHighUSN;
  gint32 updateCount;
  GPtrArray * notes;
  gboolean __isset_notes;
  GPtrArray * notebooks;
  gboolean __isset_notebooks;
  GPtrArray * tags;
  gboolean __isset_tags;
  GPtrArray * searches;
  gboolean __isset_searches;
  GPtrArray * resources;
  gboolean __isset_resources;
  GPtrArray * expungedNotes;
  gboolean __isset_expungedNotes;
  GPtrArray * expungedNotebooks;
  gboolean __isset_expungedNotebooks;
  GPtrArray * expungedTags;
  gboolean __isset_expungedTags;
  GPtrArray * expungedSearches;
  gboolean __isset_expungedSearches;
  GPtrArray * linkedNotebooks;
  gboolean __isset_linkedNotebooks;
  GPtrArray * expungedLinkedNotebooks;
  gboolean __isset_expungedLinkedNotebooks;
};
typedef struct _SyncChunk SyncChunk;

struct _SyncChunkClass
{
  ThriftStructClass parent;
};
typedef struct _SyncChunkClass SyncChunkClass;

GType sync_chunk_get_type (void);
#define TYPE_SYNC_CHUNK (sync_chunk_get_type())
#define SYNC_CHUNK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SYNC_CHUNK, SyncChunk))
#define SYNC_CHUNK_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SYNC_CHUNK, SyncChunkClass))
#define IS_SYNC_CHUNK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SYNC_CHUNK))
#define IS_SYNC_CHUNK_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SYNC_CHUNK))
#define SYNC_CHUNK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SYNC_CHUNK, SyncChunkClass))

/* struct SyncChunkFilter */
struct _SyncChunkFilter
{ 
  ThriftStruct parent; 

  /* public */
  gboolean includeNotes;
  gboolean __isset_includeNotes;
  gboolean includeNoteResources;
  gboolean __isset_includeNoteResources;
  gboolean includeNoteAttributes;
  gboolean __isset_includeNoteAttributes;
  gboolean includeNotebooks;
  gboolean __isset_includeNotebooks;
  gboolean includeTags;
  gboolean __isset_includeTags;
  gboolean includeSearches;
  gboolean __isset_includeSearches;
  gboolean includeResources;
  gboolean __isset_includeResources;
  gboolean includeLinkedNotebooks;
  gboolean __isset_includeLinkedNotebooks;
  gboolean includeExpunged;
  gboolean __isset_includeExpunged;
  gboolean includeNoteApplicationDataFullMap;
  gboolean __isset_includeNoteApplicationDataFullMap;
  gboolean includeResourceApplicationDataFullMap;
  gboolean __isset_includeResourceApplicationDataFullMap;
  gboolean includeNoteResourceApplicationDataFullMap;
  gboolean __isset_includeNoteResourceApplicationDataFullMap;
  gboolean includeSharedNotes;
  gboolean __isset_includeSharedNotes;
  gboolean omitSharedNotebooks;
  gboolean __isset_omitSharedNotebooks;
  gchar * requireNoteContentClass;
  gboolean __isset_requireNoteContentClass;
  GHashTable * notebookGuids;
  gboolean __isset_notebookGuids;
};
typedef struct _SyncChunkFilter SyncChunkFilter;

struct _SyncChunkFilterClass
{
  ThriftStructClass parent;
};
typedef struct _SyncChunkFilterClass SyncChunkFilterClass;

GType sync_chunk_filter_get_type (void);
#define TYPE_SYNC_CHUNK_FILTER (sync_chunk_filter_get_type())
#define SYNC_CHUNK_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SYNC_CHUNK_FILTER, SyncChunkFilter))
#define SYNC_CHUNK_FILTER_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SYNC_CHUNK_FILTER, SyncChunkFilterClass))
#define IS_SYNC_CHUNK_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SYNC_CHUNK_FILTER))
#define IS_SYNC_CHUNK_FILTER_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SYNC_CHUNK_FILTER))
#define SYNC_CHUNK_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SYNC_CHUNK_FILTER, SyncChunkFilterClass))

/* struct NoteFilter */
struct _NoteFilter
{ 
  ThriftStruct parent; 

  /* public */
  gint32 order;
  gboolean __isset_order;
  gboolean ascending;
  gboolean __isset_ascending;
  gchar * words;
  gboolean __isset_words;
  gchar * notebookGuid;
  gboolean __isset_notebookGuid;
  GPtrArray * tagGuids;
  gboolean __isset_tagGuids;
  gchar * timeZone;
  gboolean __isset_timeZone;
  gboolean inactive;
  gboolean __isset_inactive;
  gchar * emphasized;
  gboolean __isset_emphasized;
  gboolean includeAllReadableNotebooks;
  gboolean __isset_includeAllReadableNotebooks;
  gboolean includeAllReadableWorkspaces;
  gboolean __isset_includeAllReadableWorkspaces;
  gchar * context;
  gboolean __isset_context;
  gchar * rawWords;
  gboolean __isset_rawWords;
  GByteArray * searchContextBytes;
  gboolean __isset_searchContextBytes;
};
typedef struct _NoteFilter NoteFilter;

struct _NoteFilterClass
{
  ThriftStructClass parent;
};
typedef struct _NoteFilterClass NoteFilterClass;

GType note_filter_get_type (void);
#define TYPE_NOTE_FILTER (note_filter_get_type())
#define NOTE_FILTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_FILTER, NoteFilter))
#define NOTE_FILTER_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_FILTER, NoteFilterClass))
#define IS_NOTE_FILTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_FILTER))
#define IS_NOTE_FILTER_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_FILTER))
#define NOTE_FILTER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_FILTER, NoteFilterClass))

/* struct NoteList */
struct _NoteList
{ 
  ThriftStruct parent; 

  /* public */
  gint32 startIndex;
  gint32 totalNotes;
  GPtrArray * notes;
  GPtrArray * stoppedWords;
  gboolean __isset_stoppedWords;
  GPtrArray * searchedWords;
  gboolean __isset_searchedWords;
  gint32 updateCount;
  gboolean __isset_updateCount;
  GByteArray * searchContextBytes;
  gboolean __isset_searchContextBytes;
  gchar * debugInfo;
  gboolean __isset_debugInfo;
};
typedef struct _NoteList NoteList;

struct _NoteListClass
{
  ThriftStructClass parent;
};
typedef struct _NoteListClass NoteListClass;

GType note_list_get_type (void);
#define TYPE_NOTE_LIST (note_list_get_type())
#define NOTE_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_LIST, NoteList))
#define NOTE_LIST_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_LIST, NoteListClass))
#define IS_NOTE_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_LIST))
#define IS_NOTE_LIST_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_LIST))
#define NOTE_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_LIST, NoteListClass))

/* struct NoteMetadata */
struct _NoteMetadata
{ 
  ThriftStruct parent; 

  /* public */
  gchar * guid;
  gchar * title;
  gboolean __isset_title;
  gint32 contentLength;
  gboolean __isset_contentLength;
  gint64 created;
  gboolean __isset_created;
  gint64 updated;
  gboolean __isset_updated;
  gint64 deleted;
  gboolean __isset_deleted;
  gint32 updateSequenceNum;
  gboolean __isset_updateSequenceNum;
  gchar * notebookGuid;
  gboolean __isset_notebookGuid;
  GPtrArray * tagGuids;
  gboolean __isset_tagGuids;
  NoteAttributes * attributes;
  gboolean __isset_attributes;
  gchar * largestResourceMime;
  gboolean __isset_largestResourceMime;
  gint32 largestResourceSize;
  gboolean __isset_largestResourceSize;
};
typedef struct _NoteMetadata NoteMetadata;

struct _NoteMetadataClass
{
  ThriftStructClass parent;
};
typedef struct _NoteMetadataClass NoteMetadataClass;

GType note_metadata_get_type (void);
#define TYPE_NOTE_METADATA (note_metadata_get_type())
#define NOTE_METADATA(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_METADATA, NoteMetadata))
#define NOTE_METADATA_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_METADATA, NoteMetadataClass))
#define IS_NOTE_METADATA(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_METADATA))
#define IS_NOTE_METADATA_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_METADATA))
#define NOTE_METADATA_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_METADATA, NoteMetadataClass))

/* struct NotesMetadataList */
struct _NotesMetadataList
{ 
  ThriftStruct parent; 

  /* public */
  gint32 startIndex;
  gint32 totalNotes;
  GPtrArray * notes;
  GPtrArray * stoppedWords;
  gboolean __isset_stoppedWords;
  GPtrArray * searchedWords;
  gboolean __isset_searchedWords;
  gint32 updateCount;
  gboolean __isset_updateCount;
  GByteArray * searchContextBytes;
  gboolean __isset_searchContextBytes;
  gchar * debugInfo;
  gboolean __isset_debugInfo;
};
typedef struct _NotesMetadataList NotesMetadataList;

struct _NotesMetadataListClass
{
  ThriftStructClass parent;
};
typedef struct _NotesMetadataListClass NotesMetadataListClass;

GType notes_metadata_list_get_type (void);
#define TYPE_NOTES_METADATA_LIST (notes_metadata_list_get_type())
#define NOTES_METADATA_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTES_METADATA_LIST, NotesMetadataList))
#define NOTES_METADATA_LIST_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTES_METADATA_LIST, NotesMetadataListClass))
#define IS_NOTES_METADATA_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTES_METADATA_LIST))
#define IS_NOTES_METADATA_LIST_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTES_METADATA_LIST))
#define NOTES_METADATA_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTES_METADATA_LIST, NotesMetadataListClass))

/* struct NotesMetadataResultSpec */
struct _NotesMetadataResultSpec
{ 
  ThriftStruct parent; 

  /* public */
  gboolean includeTitle;
  gboolean __isset_includeTitle;
  gboolean includeContentLength;
  gboolean __isset_includeContentLength;
  gboolean includeCreated;
  gboolean __isset_includeCreated;
  gboolean includeUpdated;
  gboolean __isset_includeUpdated;
  gboolean includeDeleted;
  gboolean __isset_includeDeleted;
  gboolean includeUpdateSequenceNum;
  gboolean __isset_includeUpdateSequenceNum;
  gboolean includeNotebookGuid;
  gboolean __isset_includeNotebookGuid;
  gboolean includeTagGuids;
  gboolean __isset_includeTagGuids;
  gboolean includeAttributes;
  gboolean __isset_includeAttributes;
  gboolean includeLargestResourceMime;
  gboolean __isset_includeLargestResourceMime;
  gboolean includeLargestResourceSize;
  gboolean __isset_includeLargestResourceSize;
};
typedef struct _NotesMetadataResultSpec NotesMetadataResultSpec;

struct _NotesMetadataResultSpecClass
{
  ThriftStructClass parent;
};
typedef struct _NotesMetadataResultSpecClass NotesMetadataResultSpecClass;

GType notes_metadata_result_spec_get_type (void);
#define TYPE_NOTES_METADATA_RESULT_SPEC (notes_metadata_result_spec_get_type())
#define NOTES_METADATA_RESULT_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTES_METADATA_RESULT_SPEC, NotesMetadataResultSpec))
#define NOTES_METADATA_RESULT_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTES_METADATA_RESULT_SPEC, NotesMetadataResultSpecClass))
#define IS_NOTES_METADATA_RESULT_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTES_METADATA_RESULT_SPEC))
#define IS_NOTES_METADATA_RESULT_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTES_METADATA_RESULT_SPEC))
#define NOTES_METADATA_RESULT_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTES_METADATA_RESULT_SPEC, NotesMetadataResultSpecClass))

/* struct NoteCollectionCounts */
struct _NoteCollectionCounts
{ 
  ThriftStruct parent; 

  /* public */
  GHashTable * notebookCounts;
  gboolean __isset_notebookCounts;
  GHashTable * tagCounts;
  gboolean __isset_tagCounts;
  gint32 trashCount;
  gboolean __isset_trashCount;
};
typedef struct _NoteCollectionCounts NoteCollectionCounts;

struct _NoteCollectionCountsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteCollectionCountsClass NoteCollectionCountsClass;

GType note_collection_counts_get_type (void);
#define TYPE_NOTE_COLLECTION_COUNTS (note_collection_counts_get_type())
#define NOTE_COLLECTION_COUNTS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_COLLECTION_COUNTS, NoteCollectionCounts))
#define NOTE_COLLECTION_COUNTS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_COLLECTION_COUNTS, NoteCollectionCountsClass))
#define IS_NOTE_COLLECTION_COUNTS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_COLLECTION_COUNTS))
#define IS_NOTE_COLLECTION_COUNTS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_COLLECTION_COUNTS))
#define NOTE_COLLECTION_COUNTS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_COLLECTION_COUNTS, NoteCollectionCountsClass))

/* struct NoteResultSpec */
struct _NoteResultSpec
{ 
  ThriftStruct parent; 

  /* public */
  gboolean includeContent;
  gboolean __isset_includeContent;
  gboolean includeResourcesData;
  gboolean __isset_includeResourcesData;
  gboolean includeResourcesRecognition;
  gboolean __isset_includeResourcesRecognition;
  gboolean includeResourcesAlternateData;
  gboolean __isset_includeResourcesAlternateData;
  gboolean includeSharedNotes;
  gboolean __isset_includeSharedNotes;
  gboolean includeNoteAppDataValues;
  gboolean __isset_includeNoteAppDataValues;
  gboolean includeResourceAppDataValues;
  gboolean __isset_includeResourceAppDataValues;
  gboolean includeAccountLimits;
  gboolean __isset_includeAccountLimits;
};
typedef struct _NoteResultSpec NoteResultSpec;

struct _NoteResultSpecClass
{
  ThriftStructClass parent;
};
typedef struct _NoteResultSpecClass NoteResultSpecClass;

GType note_result_spec_get_type (void);
#define TYPE_NOTE_RESULT_SPEC (note_result_spec_get_type())
#define NOTE_RESULT_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_RESULT_SPEC, NoteResultSpec))
#define NOTE_RESULT_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_RESULT_SPEC, NoteResultSpecClass))
#define IS_NOTE_RESULT_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_RESULT_SPEC))
#define IS_NOTE_RESULT_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_RESULT_SPEC))
#define NOTE_RESULT_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_RESULT_SPEC, NoteResultSpecClass))

/* struct NoteEmailParameters */
struct _NoteEmailParameters
{ 
  ThriftStruct parent; 

  /* public */
  gchar * guid;
  gboolean __isset_guid;
  Note * note;
  gboolean __isset_note;
  GPtrArray * toAddresses;
  gboolean __isset_toAddresses;
  GPtrArray * ccAddresses;
  gboolean __isset_ccAddresses;
  gchar * subject;
  gboolean __isset_subject;
  gchar * message;
  gboolean __isset_message;
};
typedef struct _NoteEmailParameters NoteEmailParameters;

struct _NoteEmailParametersClass
{
  ThriftStructClass parent;
};
typedef struct _NoteEmailParametersClass NoteEmailParametersClass;

GType note_email_parameters_get_type (void);
#define TYPE_NOTE_EMAIL_PARAMETERS (note_email_parameters_get_type())
#define NOTE_EMAIL_PARAMETERS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_EMAIL_PARAMETERS, NoteEmailParameters))
#define NOTE_EMAIL_PARAMETERS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_EMAIL_PARAMETERS, NoteEmailParametersClass))
#define IS_NOTE_EMAIL_PARAMETERS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_EMAIL_PARAMETERS))
#define IS_NOTE_EMAIL_PARAMETERS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_EMAIL_PARAMETERS))
#define NOTE_EMAIL_PARAMETERS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_EMAIL_PARAMETERS, NoteEmailParametersClass))

/* struct NoteVersionId */
struct _NoteVersionId
{ 
  ThriftStruct parent; 

  /* public */
  gint32 updateSequenceNum;
  gint64 updated;
  gint64 saved;
  gchar * title;
  gint32 lastEditorId;
  gboolean __isset_lastEditorId;
};
typedef struct _NoteVersionId NoteVersionId;

struct _NoteVersionIdClass
{
  ThriftStructClass parent;
};
typedef struct _NoteVersionIdClass NoteVersionIdClass;

GType note_version_id_get_type (void);
#define TYPE_NOTE_VERSION_ID (note_version_id_get_type())
#define NOTE_VERSION_ID(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_VERSION_ID, NoteVersionId))
#define NOTE_VERSION_ID_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_VERSION_ID, NoteVersionIdClass))
#define IS_NOTE_VERSION_ID(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_VERSION_ID))
#define IS_NOTE_VERSION_ID_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_VERSION_ID))
#define NOTE_VERSION_ID_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_VERSION_ID, NoteVersionIdClass))

/* struct RelatedQuery */
struct _RelatedQuery
{ 
  ThriftStruct parent; 

  /* public */
  gchar * noteGuid;
  gboolean __isset_noteGuid;
  gchar * plainText;
  gboolean __isset_plainText;
  NoteFilter * filter;
  gboolean __isset_filter;
  gchar * referenceUri;
  gboolean __isset_referenceUri;
  gchar * context;
  gboolean __isset_context;
  gchar * cacheKey;
  gboolean __isset_cacheKey;
};
typedef struct _RelatedQuery RelatedQuery;

struct _RelatedQueryClass
{
  ThriftStructClass parent;
};
typedef struct _RelatedQueryClass RelatedQueryClass;

GType related_query_get_type (void);
#define TYPE_RELATED_QUERY (related_query_get_type())
#define RELATED_QUERY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_RELATED_QUERY, RelatedQuery))
#define RELATED_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_RELATED_QUERY, RelatedQueryClass))
#define IS_RELATED_QUERY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_RELATED_QUERY))
#define IS_RELATED_QUERY_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_RELATED_QUERY))
#define RELATED_QUERY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_RELATED_QUERY, RelatedQueryClass))

/* struct RelatedResult */
struct _RelatedResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * notes;
  gboolean __isset_notes;
  GPtrArray * notebooks;
  gboolean __isset_notebooks;
  GPtrArray * tags;
  gboolean __isset_tags;
  GPtrArray * containingNotebooks;
  gboolean __isset_containingNotebooks;
  gchar * debugInfo;
  gboolean __isset_debugInfo;
  GPtrArray * experts;
  gboolean __isset_experts;
  GPtrArray * relatedContent;
  gboolean __isset_relatedContent;
  gchar * cacheKey;
  gboolean __isset_cacheKey;
  gint32 cacheExpires;
  gboolean __isset_cacheExpires;
};
typedef struct _RelatedResult RelatedResult;

struct _RelatedResultClass
{
  ThriftStructClass parent;
};
typedef struct _RelatedResultClass RelatedResultClass;

GType related_result_get_type (void);
#define TYPE_RELATED_RESULT (related_result_get_type())
#define RELATED_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_RELATED_RESULT, RelatedResult))
#define RELATED_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_RELATED_RESULT, RelatedResultClass))
#define IS_RELATED_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_RELATED_RESULT))
#define IS_RELATED_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_RELATED_RESULT))
#define RELATED_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_RELATED_RESULT, RelatedResultClass))

/* struct RelatedResultSpec */
struct _RelatedResultSpec
{ 
  ThriftStruct parent; 

  /* public */
  gint32 maxNotes;
  gboolean __isset_maxNotes;
  gint32 maxNotebooks;
  gboolean __isset_maxNotebooks;
  gint32 maxTags;
  gboolean __isset_maxTags;
  gboolean writableNotebooksOnly;
  gboolean __isset_writableNotebooksOnly;
  gboolean includeContainingNotebooks;
  gboolean __isset_includeContainingNotebooks;
  gboolean includeDebugInfo;
  gboolean __isset_includeDebugInfo;
  gint32 maxExperts;
  gboolean __isset_maxExperts;
  gint32 maxRelatedContent;
  gboolean __isset_maxRelatedContent;
  GHashTable * relatedContentTypes;
  gboolean __isset_relatedContentTypes;
};
typedef struct _RelatedResultSpec RelatedResultSpec;

struct _RelatedResultSpecClass
{
  ThriftStructClass parent;
};
typedef struct _RelatedResultSpecClass RelatedResultSpecClass;

GType related_result_spec_get_type (void);
#define TYPE_RELATED_RESULT_SPEC (related_result_spec_get_type())
#define RELATED_RESULT_SPEC(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_RELATED_RESULT_SPEC, RelatedResultSpec))
#define RELATED_RESULT_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_RELATED_RESULT_SPEC, RelatedResultSpecClass))
#define IS_RELATED_RESULT_SPEC(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_RELATED_RESULT_SPEC))
#define IS_RELATED_RESULT_SPEC_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_RELATED_RESULT_SPEC))
#define RELATED_RESULT_SPEC_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_RELATED_RESULT_SPEC, RelatedResultSpecClass))

/* struct UpdateNoteIfUsnMatchesResult */
struct _UpdateNoteIfUsnMatchesResult
{ 
  ThriftStruct parent; 

  /* public */
  Note * note;
  gboolean __isset_note;
  gboolean updated;
  gboolean __isset_updated;
};
typedef struct _UpdateNoteIfUsnMatchesResult UpdateNoteIfUsnMatchesResult;

struct _UpdateNoteIfUsnMatchesResultClass
{
  ThriftStructClass parent;
};
typedef struct _UpdateNoteIfUsnMatchesResultClass UpdateNoteIfUsnMatchesResultClass;

GType update_note_if_usn_matches_result_get_type (void);
#define TYPE_UPDATE_NOTE_IF_USN_MATCHES_RESULT (update_note_if_usn_matches_result_get_type())
#define UPDATE_NOTE_IF_USN_MATCHES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_UPDATE_NOTE_IF_USN_MATCHES_RESULT, UpdateNoteIfUsnMatchesResult))
#define UPDATE_NOTE_IF_USN_MATCHES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_UPDATE_NOTE_IF_USN_MATCHES_RESULT, UpdateNoteIfUsnMatchesResultClass))
#define IS_UPDATE_NOTE_IF_USN_MATCHES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_UPDATE_NOTE_IF_USN_MATCHES_RESULT))
#define IS_UPDATE_NOTE_IF_USN_MATCHES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_UPDATE_NOTE_IF_USN_MATCHES_RESULT))
#define UPDATE_NOTE_IF_USN_MATCHES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_UPDATE_NOTE_IF_USN_MATCHES_RESULT, UpdateNoteIfUsnMatchesResultClass))

/* struct ShareRelationshipRestrictions */
struct _ShareRelationshipRestrictions
{ 
  ThriftStruct parent; 

  /* public */
  gboolean noSetReadOnly;
  gboolean __isset_noSetReadOnly;
  gboolean noSetReadPlusActivity;
  gboolean __isset_noSetReadPlusActivity;
  gboolean noSetModify;
  gboolean __isset_noSetModify;
  gboolean noSetFullAccess;
  gboolean __isset_noSetFullAccess;
};
typedef struct _ShareRelationshipRestrictions ShareRelationshipRestrictions;

struct _ShareRelationshipRestrictionsClass
{
  ThriftStructClass parent;
};
typedef struct _ShareRelationshipRestrictionsClass ShareRelationshipRestrictionsClass;

GType share_relationship_restrictions_get_type (void);
#define TYPE_SHARE_RELATIONSHIP_RESTRICTIONS (share_relationship_restrictions_get_type())
#define SHARE_RELATIONSHIP_RESTRICTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SHARE_RELATIONSHIP_RESTRICTIONS, ShareRelationshipRestrictions))
#define SHARE_RELATIONSHIP_RESTRICTIONS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SHARE_RELATIONSHIP_RESTRICTIONS, ShareRelationshipRestrictionsClass))
#define IS_SHARE_RELATIONSHIP_RESTRICTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SHARE_RELATIONSHIP_RESTRICTIONS))
#define IS_SHARE_RELATIONSHIP_RESTRICTIONS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SHARE_RELATIONSHIP_RESTRICTIONS))
#define SHARE_RELATIONSHIP_RESTRICTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SHARE_RELATIONSHIP_RESTRICTIONS, ShareRelationshipRestrictionsClass))

/* struct InvitationShareRelationship */
struct _InvitationShareRelationship
{ 
  ThriftStruct parent; 

  /* public */
  gchar * displayName;
  gboolean __isset_displayName;
  UserIdentity * recipientUserIdentity;
  gboolean __isset_recipientUserIdentity;
  ShareRelationshipPrivilegeLevel privilege;
  gboolean __isset_privilege;
  gint32 sharerUserId;
  gboolean __isset_sharerUserId;
};
typedef struct _InvitationShareRelationship InvitationShareRelationship;

struct _InvitationShareRelationshipClass
{
  ThriftStructClass parent;
};
typedef struct _InvitationShareRelationshipClass InvitationShareRelationshipClass;

GType invitation_share_relationship_get_type (void);
#define TYPE_INVITATION_SHARE_RELATIONSHIP (invitation_share_relationship_get_type())
#define INVITATION_SHARE_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_INVITATION_SHARE_RELATIONSHIP, InvitationShareRelationship))
#define INVITATION_SHARE_RELATIONSHIP_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_INVITATION_SHARE_RELATIONSHIP, InvitationShareRelationshipClass))
#define IS_INVITATION_SHARE_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_INVITATION_SHARE_RELATIONSHIP))
#define IS_INVITATION_SHARE_RELATIONSHIP_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_INVITATION_SHARE_RELATIONSHIP))
#define INVITATION_SHARE_RELATIONSHIP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_INVITATION_SHARE_RELATIONSHIP, InvitationShareRelationshipClass))

/* struct MemberShareRelationship */
struct _MemberShareRelationship
{ 
  ThriftStruct parent; 

  /* public */
  gchar * displayName;
  gboolean __isset_displayName;
  gint32 recipientUserId;
  gboolean __isset_recipientUserId;
  ShareRelationshipPrivilegeLevel bestPrivilege;
  gboolean __isset_bestPrivilege;
  ShareRelationshipPrivilegeLevel individualPrivilege;
  gboolean __isset_individualPrivilege;
  ShareRelationshipRestrictions * restrictions;
  gboolean __isset_restrictions;
  gint32 sharerUserId;
  gboolean __isset_sharerUserId;
};
typedef struct _MemberShareRelationship MemberShareRelationship;

struct _MemberShareRelationshipClass
{
  ThriftStructClass parent;
};
typedef struct _MemberShareRelationshipClass MemberShareRelationshipClass;

GType member_share_relationship_get_type (void);
#define TYPE_MEMBER_SHARE_RELATIONSHIP (member_share_relationship_get_type())
#define MEMBER_SHARE_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MEMBER_SHARE_RELATIONSHIP, MemberShareRelationship))
#define MEMBER_SHARE_RELATIONSHIP_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_MEMBER_SHARE_RELATIONSHIP, MemberShareRelationshipClass))
#define IS_MEMBER_SHARE_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MEMBER_SHARE_RELATIONSHIP))
#define IS_MEMBER_SHARE_RELATIONSHIP_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_MEMBER_SHARE_RELATIONSHIP))
#define MEMBER_SHARE_RELATIONSHIP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MEMBER_SHARE_RELATIONSHIP, MemberShareRelationshipClass))

/* struct ShareRelationships */
struct _ShareRelationships
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * invitations;
  gboolean __isset_invitations;
  GPtrArray * memberships;
  gboolean __isset_memberships;
  ShareRelationshipRestrictions * invitationRestrictions;
  gboolean __isset_invitationRestrictions;
};
typedef struct _ShareRelationships ShareRelationships;

struct _ShareRelationshipsClass
{
  ThriftStructClass parent;
};
typedef struct _ShareRelationshipsClass ShareRelationshipsClass;

GType share_relationships_get_type (void);
#define TYPE_SHARE_RELATIONSHIPS (share_relationships_get_type())
#define SHARE_RELATIONSHIPS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SHARE_RELATIONSHIPS, ShareRelationships))
#define SHARE_RELATIONSHIPS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SHARE_RELATIONSHIPS, ShareRelationshipsClass))
#define IS_SHARE_RELATIONSHIPS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SHARE_RELATIONSHIPS))
#define IS_SHARE_RELATIONSHIPS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SHARE_RELATIONSHIPS))
#define SHARE_RELATIONSHIPS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SHARE_RELATIONSHIPS, ShareRelationshipsClass))

/* struct ManageNotebookSharesParameters */
struct _ManageNotebookSharesParameters
{ 
  ThriftStruct parent; 

  /* public */
  gchar * notebookGuid;
  gboolean __isset_notebookGuid;
  gchar * inviteMessage;
  gboolean __isset_inviteMessage;
  GPtrArray * membershipsToUpdate;
  gboolean __isset_membershipsToUpdate;
  GPtrArray * invitationsToCreateOrUpdate;
  gboolean __isset_invitationsToCreateOrUpdate;
  GPtrArray * unshares;
  gboolean __isset_unshares;
};
typedef struct _ManageNotebookSharesParameters ManageNotebookSharesParameters;

struct _ManageNotebookSharesParametersClass
{
  ThriftStructClass parent;
};
typedef struct _ManageNotebookSharesParametersClass ManageNotebookSharesParametersClass;

GType manage_notebook_shares_parameters_get_type (void);
#define TYPE_MANAGE_NOTEBOOK_SHARES_PARAMETERS (manage_notebook_shares_parameters_get_type())
#define MANAGE_NOTEBOOK_SHARES_PARAMETERS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_PARAMETERS, ManageNotebookSharesParameters))
#define MANAGE_NOTEBOOK_SHARES_PARAMETERS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_MANAGE_NOTEBOOK_SHARES_PARAMETERS, ManageNotebookSharesParametersClass))
#define IS_MANAGE_NOTEBOOK_SHARES_PARAMETERS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_PARAMETERS))
#define IS_MANAGE_NOTEBOOK_SHARES_PARAMETERS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_MANAGE_NOTEBOOK_SHARES_PARAMETERS))
#define MANAGE_NOTEBOOK_SHARES_PARAMETERS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_PARAMETERS, ManageNotebookSharesParametersClass))

/* struct ManageNotebookSharesError */
struct _ManageNotebookSharesError
{ 
  ThriftStruct parent; 

  /* public */
  UserIdentity * userIdentity;
  gboolean __isset_userIdentity;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _ManageNotebookSharesError ManageNotebookSharesError;

struct _ManageNotebookSharesErrorClass
{
  ThriftStructClass parent;
};
typedef struct _ManageNotebookSharesErrorClass ManageNotebookSharesErrorClass;

GType manage_notebook_shares_error_get_type (void);
#define TYPE_MANAGE_NOTEBOOK_SHARES_ERROR (manage_notebook_shares_error_get_type())
#define MANAGE_NOTEBOOK_SHARES_ERROR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_ERROR, ManageNotebookSharesError))
#define MANAGE_NOTEBOOK_SHARES_ERROR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_MANAGE_NOTEBOOK_SHARES_ERROR, ManageNotebookSharesErrorClass))
#define IS_MANAGE_NOTEBOOK_SHARES_ERROR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_ERROR))
#define IS_MANAGE_NOTEBOOK_SHARES_ERROR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_MANAGE_NOTEBOOK_SHARES_ERROR))
#define MANAGE_NOTEBOOK_SHARES_ERROR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_ERROR, ManageNotebookSharesErrorClass))

/* struct ManageNotebookSharesResult */
struct _ManageNotebookSharesResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * errors;
  gboolean __isset_errors;
};
typedef struct _ManageNotebookSharesResult ManageNotebookSharesResult;

struct _ManageNotebookSharesResultClass
{
  ThriftStructClass parent;
};
typedef struct _ManageNotebookSharesResultClass ManageNotebookSharesResultClass;

GType manage_notebook_shares_result_get_type (void);
#define TYPE_MANAGE_NOTEBOOK_SHARES_RESULT (manage_notebook_shares_result_get_type())
#define MANAGE_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_RESULT, ManageNotebookSharesResult))
#define MANAGE_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_MANAGE_NOTEBOOK_SHARES_RESULT, ManageNotebookSharesResultClass))
#define IS_MANAGE_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_RESULT))
#define IS_MANAGE_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_MANAGE_NOTEBOOK_SHARES_RESULT))
#define MANAGE_NOTEBOOK_SHARES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MANAGE_NOTEBOOK_SHARES_RESULT, ManageNotebookSharesResultClass))

/* struct SharedNoteTemplate */
struct _SharedNoteTemplate
{ 
  ThriftStruct parent; 

  /* public */
  gchar * noteGuid;
  gboolean __isset_noteGuid;
  gint64 recipientThreadId;
  gboolean __isset_recipientThreadId;
  GPtrArray * recipientContacts;
  gboolean __isset_recipientContacts;
  SharedNotePrivilegeLevel privilege;
  gboolean __isset_privilege;
};
typedef struct _SharedNoteTemplate SharedNoteTemplate;

struct _SharedNoteTemplateClass
{
  ThriftStructClass parent;
};
typedef struct _SharedNoteTemplateClass SharedNoteTemplateClass;

GType shared_note_template_get_type (void);
#define TYPE_SHARED_NOTE_TEMPLATE (shared_note_template_get_type())
#define SHARED_NOTE_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SHARED_NOTE_TEMPLATE, SharedNoteTemplate))
#define SHARED_NOTE_TEMPLATE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_SHARED_NOTE_TEMPLATE, SharedNoteTemplateClass))
#define IS_SHARED_NOTE_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SHARED_NOTE_TEMPLATE))
#define IS_SHARED_NOTE_TEMPLATE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_SHARED_NOTE_TEMPLATE))
#define SHARED_NOTE_TEMPLATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SHARED_NOTE_TEMPLATE, SharedNoteTemplateClass))

/* struct NotebookShareTemplate */
struct _NotebookShareTemplate
{ 
  ThriftStruct parent; 

  /* public */
  gchar * notebookGuid;
  gboolean __isset_notebookGuid;
  gint64 recipientThreadId;
  gboolean __isset_recipientThreadId;
  GPtrArray * recipientContacts;
  gboolean __isset_recipientContacts;
  SharedNotebookPrivilegeLevel privilege;
  gboolean __isset_privilege;
};
typedef struct _NotebookShareTemplate NotebookShareTemplate;

struct _NotebookShareTemplateClass
{
  ThriftStructClass parent;
};
typedef struct _NotebookShareTemplateClass NotebookShareTemplateClass;

GType notebook_share_template_get_type (void);
#define TYPE_NOTEBOOK_SHARE_TEMPLATE (notebook_share_template_get_type())
#define NOTEBOOK_SHARE_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTEBOOK_SHARE_TEMPLATE, NotebookShareTemplate))
#define NOTEBOOK_SHARE_TEMPLATE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTEBOOK_SHARE_TEMPLATE, NotebookShareTemplateClass))
#define IS_NOTEBOOK_SHARE_TEMPLATE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTEBOOK_SHARE_TEMPLATE))
#define IS_NOTEBOOK_SHARE_TEMPLATE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTEBOOK_SHARE_TEMPLATE))
#define NOTEBOOK_SHARE_TEMPLATE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTEBOOK_SHARE_TEMPLATE, NotebookShareTemplateClass))

/* struct CreateOrUpdateNotebookSharesResult */
struct _CreateOrUpdateNotebookSharesResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 updateSequenceNum;
  gboolean __isset_updateSequenceNum;
  GPtrArray * matchingShares;
  gboolean __isset_matchingShares;
};
typedef struct _CreateOrUpdateNotebookSharesResult CreateOrUpdateNotebookSharesResult;

struct _CreateOrUpdateNotebookSharesResultClass
{
  ThriftStructClass parent;
};
typedef struct _CreateOrUpdateNotebookSharesResultClass CreateOrUpdateNotebookSharesResultClass;

GType create_or_update_notebook_shares_result_get_type (void);
#define TYPE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT (create_or_update_notebook_shares_result_get_type())
#define CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT, CreateOrUpdateNotebookSharesResult))
#define CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT, CreateOrUpdateNotebookSharesResultClass))
#define IS_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT))
#define IS_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT))
#define CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT, CreateOrUpdateNotebookSharesResultClass))

/* struct NoteShareRelationshipRestrictions */
struct _NoteShareRelationshipRestrictions
{ 
  ThriftStruct parent; 

  /* public */
  gboolean noSetReadNote;
  gboolean __isset_noSetReadNote;
  gboolean noSetModifyNote;
  gboolean __isset_noSetModifyNote;
  gboolean noSetFullAccess;
  gboolean __isset_noSetFullAccess;
};
typedef struct _NoteShareRelationshipRestrictions NoteShareRelationshipRestrictions;

struct _NoteShareRelationshipRestrictionsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteShareRelationshipRestrictionsClass NoteShareRelationshipRestrictionsClass;

GType note_share_relationship_restrictions_get_type (void);
#define TYPE_NOTE_SHARE_RELATIONSHIP_RESTRICTIONS (note_share_relationship_restrictions_get_type())
#define NOTE_SHARE_RELATIONSHIP_RESTRICTIONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_SHARE_RELATIONSHIP_RESTRICTIONS, NoteShareRelationshipRestrictions))
#define NOTE_SHARE_RELATIONSHIP_RESTRICTIONS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_SHARE_RELATIONSHIP_RESTRICTIONS, NoteShareRelationshipRestrictionsClass))
#define IS_NOTE_SHARE_RELATIONSHIP_RESTRICTIONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_SHARE_RELATIONSHIP_RESTRICTIONS))
#define IS_NOTE_SHARE_RELATIONSHIP_RESTRICTIONS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_SHARE_RELATIONSHIP_RESTRICTIONS))
#define NOTE_SHARE_RELATIONSHIP_RESTRICTIONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_SHARE_RELATIONSHIP_RESTRICTIONS, NoteShareRelationshipRestrictionsClass))

/* struct NoteMemberShareRelationship */
struct _NoteMemberShareRelationship
{ 
  ThriftStruct parent; 

  /* public */
  gchar * displayName;
  gboolean __isset_displayName;
  gint32 recipientUserId;
  gboolean __isset_recipientUserId;
  SharedNotePrivilegeLevel privilege;
  gboolean __isset_privilege;
  NoteShareRelationshipRestrictions * restrictions;
  gboolean __isset_restrictions;
  gint32 sharerUserId;
  gboolean __isset_sharerUserId;
};
typedef struct _NoteMemberShareRelationship NoteMemberShareRelationship;

struct _NoteMemberShareRelationshipClass
{
  ThriftStructClass parent;
};
typedef struct _NoteMemberShareRelationshipClass NoteMemberShareRelationshipClass;

GType note_member_share_relationship_get_type (void);
#define TYPE_NOTE_MEMBER_SHARE_RELATIONSHIP (note_member_share_relationship_get_type())
#define NOTE_MEMBER_SHARE_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_MEMBER_SHARE_RELATIONSHIP, NoteMemberShareRelationship))
#define NOTE_MEMBER_SHARE_RELATIONSHIP_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_MEMBER_SHARE_RELATIONSHIP, NoteMemberShareRelationshipClass))
#define IS_NOTE_MEMBER_SHARE_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_MEMBER_SHARE_RELATIONSHIP))
#define IS_NOTE_MEMBER_SHARE_RELATIONSHIP_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_MEMBER_SHARE_RELATIONSHIP))
#define NOTE_MEMBER_SHARE_RELATIONSHIP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_MEMBER_SHARE_RELATIONSHIP, NoteMemberShareRelationshipClass))

/* struct NoteInvitationShareRelationship */
struct _NoteInvitationShareRelationship
{ 
  ThriftStruct parent; 

  /* public */
  gchar * displayName;
  gboolean __isset_displayName;
  gint64 recipientIdentityId;
  gboolean __isset_recipientIdentityId;
  SharedNotePrivilegeLevel privilege;
  gboolean __isset_privilege;
  gint32 sharerUserId;
  gboolean __isset_sharerUserId;
};
typedef struct _NoteInvitationShareRelationship NoteInvitationShareRelationship;

struct _NoteInvitationShareRelationshipClass
{
  ThriftStructClass parent;
};
typedef struct _NoteInvitationShareRelationshipClass NoteInvitationShareRelationshipClass;

GType note_invitation_share_relationship_get_type (void);
#define TYPE_NOTE_INVITATION_SHARE_RELATIONSHIP (note_invitation_share_relationship_get_type())
#define NOTE_INVITATION_SHARE_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_INVITATION_SHARE_RELATIONSHIP, NoteInvitationShareRelationship))
#define NOTE_INVITATION_SHARE_RELATIONSHIP_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_INVITATION_SHARE_RELATIONSHIP, NoteInvitationShareRelationshipClass))
#define IS_NOTE_INVITATION_SHARE_RELATIONSHIP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_INVITATION_SHARE_RELATIONSHIP))
#define IS_NOTE_INVITATION_SHARE_RELATIONSHIP_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_INVITATION_SHARE_RELATIONSHIP))
#define NOTE_INVITATION_SHARE_RELATIONSHIP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_INVITATION_SHARE_RELATIONSHIP, NoteInvitationShareRelationshipClass))

/* struct NoteShareRelationships */
struct _NoteShareRelationships
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * invitations;
  gboolean __isset_invitations;
  GPtrArray * memberships;
  gboolean __isset_memberships;
  NoteShareRelationshipRestrictions * invitationRestrictions;
  gboolean __isset_invitationRestrictions;
};
typedef struct _NoteShareRelationships NoteShareRelationships;

struct _NoteShareRelationshipsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteShareRelationshipsClass NoteShareRelationshipsClass;

GType note_share_relationships_get_type (void);
#define TYPE_NOTE_SHARE_RELATIONSHIPS (note_share_relationships_get_type())
#define NOTE_SHARE_RELATIONSHIPS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_SHARE_RELATIONSHIPS, NoteShareRelationships))
#define NOTE_SHARE_RELATIONSHIPS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_SHARE_RELATIONSHIPS, NoteShareRelationshipsClass))
#define IS_NOTE_SHARE_RELATIONSHIPS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_SHARE_RELATIONSHIPS))
#define IS_NOTE_SHARE_RELATIONSHIPS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_SHARE_RELATIONSHIPS))
#define NOTE_SHARE_RELATIONSHIPS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_SHARE_RELATIONSHIPS, NoteShareRelationshipsClass))

/* struct ManageNoteSharesParameters */
struct _ManageNoteSharesParameters
{ 
  ThriftStruct parent; 

  /* public */
  gchar * noteGuid;
  gboolean __isset_noteGuid;
  GPtrArray * membershipsToUpdate;
  gboolean __isset_membershipsToUpdate;
  GPtrArray * invitationsToUpdate;
  gboolean __isset_invitationsToUpdate;
  GArray * membershipsToUnshare;
  gboolean __isset_membershipsToUnshare;
  GArray * invitationsToUnshare;
  gboolean __isset_invitationsToUnshare;
};
typedef struct _ManageNoteSharesParameters ManageNoteSharesParameters;

struct _ManageNoteSharesParametersClass
{
  ThriftStructClass parent;
};
typedef struct _ManageNoteSharesParametersClass ManageNoteSharesParametersClass;

GType manage_note_shares_parameters_get_type (void);
#define TYPE_MANAGE_NOTE_SHARES_PARAMETERS (manage_note_shares_parameters_get_type())
#define MANAGE_NOTE_SHARES_PARAMETERS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MANAGE_NOTE_SHARES_PARAMETERS, ManageNoteSharesParameters))
#define MANAGE_NOTE_SHARES_PARAMETERS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_MANAGE_NOTE_SHARES_PARAMETERS, ManageNoteSharesParametersClass))
#define IS_MANAGE_NOTE_SHARES_PARAMETERS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MANAGE_NOTE_SHARES_PARAMETERS))
#define IS_MANAGE_NOTE_SHARES_PARAMETERS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_MANAGE_NOTE_SHARES_PARAMETERS))
#define MANAGE_NOTE_SHARES_PARAMETERS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MANAGE_NOTE_SHARES_PARAMETERS, ManageNoteSharesParametersClass))

/* struct ManageNoteSharesError */
struct _ManageNoteSharesError
{ 
  ThriftStruct parent; 

  /* public */
  gint64 identityID;
  gboolean __isset_identityID;
  gint32 userID;
  gboolean __isset_userID;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _ManageNoteSharesError ManageNoteSharesError;

struct _ManageNoteSharesErrorClass
{
  ThriftStructClass parent;
};
typedef struct _ManageNoteSharesErrorClass ManageNoteSharesErrorClass;

GType manage_note_shares_error_get_type (void);
#define TYPE_MANAGE_NOTE_SHARES_ERROR (manage_note_shares_error_get_type())
#define MANAGE_NOTE_SHARES_ERROR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MANAGE_NOTE_SHARES_ERROR, ManageNoteSharesError))
#define MANAGE_NOTE_SHARES_ERROR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_MANAGE_NOTE_SHARES_ERROR, ManageNoteSharesErrorClass))
#define IS_MANAGE_NOTE_SHARES_ERROR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MANAGE_NOTE_SHARES_ERROR))
#define IS_MANAGE_NOTE_SHARES_ERROR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_MANAGE_NOTE_SHARES_ERROR))
#define MANAGE_NOTE_SHARES_ERROR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MANAGE_NOTE_SHARES_ERROR, ManageNoteSharesErrorClass))

/* struct ManageNoteSharesResult */
struct _ManageNoteSharesResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * errors;
  gboolean __isset_errors;
};
typedef struct _ManageNoteSharesResult ManageNoteSharesResult;

struct _ManageNoteSharesResultClass
{
  ThriftStructClass parent;
};
typedef struct _ManageNoteSharesResultClass ManageNoteSharesResultClass;

GType manage_note_shares_result_get_type (void);
#define TYPE_MANAGE_NOTE_SHARES_RESULT (manage_note_shares_result_get_type())
#define MANAGE_NOTE_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_MANAGE_NOTE_SHARES_RESULT, ManageNoteSharesResult))
#define MANAGE_NOTE_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_MANAGE_NOTE_SHARES_RESULT, ManageNoteSharesResultClass))
#define IS_MANAGE_NOTE_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_MANAGE_NOTE_SHARES_RESULT))
#define IS_MANAGE_NOTE_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_MANAGE_NOTE_SHARES_RESULT))
#define MANAGE_NOTE_SHARES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_MANAGE_NOTE_SHARES_RESULT, ManageNoteSharesResultClass))

/* constants */

/* struct NoteStoreGetSyncStateArgs */
struct _NoteStoreGetSyncStateArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreGetSyncStateArgs NoteStoreGetSyncStateArgs;

struct _NoteStoreGetSyncStateArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetSyncStateArgsClass NoteStoreGetSyncStateArgsClass;

GType note_store_get_sync_state_args_get_type (void);
#define TYPE_NOTE_STORE_GET_SYNC_STATE_ARGS (note_store_get_sync_state_args_get_type())
#define NOTE_STORE_GET_SYNC_STATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_SYNC_STATE_ARGS, NoteStoreGetSyncStateArgs))
#define NOTE_STORE_GET_SYNC_STATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_SYNC_STATE_ARGS, NoteStoreGetSyncStateArgsClass))
#define IS_NOTE_STORE_GET_SYNC_STATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_SYNC_STATE_ARGS))
#define IS_NOTE_STORE_GET_SYNC_STATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_SYNC_STATE_ARGS))
#define NOTE_STORE_GET_SYNC_STATE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_SYNC_STATE_ARGS, NoteStoreGetSyncStateArgsClass))

/* struct NoteStoreGetSyncStateResult */
struct _NoteStoreGetSyncStateResult
{ 
  ThriftStruct parent; 

  /* public */
  SyncState * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreGetSyncStateResult NoteStoreGetSyncStateResult;

struct _NoteStoreGetSyncStateResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetSyncStateResultClass NoteStoreGetSyncStateResultClass;

GType note_store_get_sync_state_result_get_type (void);
#define TYPE_NOTE_STORE_GET_SYNC_STATE_RESULT (note_store_get_sync_state_result_get_type())
#define NOTE_STORE_GET_SYNC_STATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_SYNC_STATE_RESULT, NoteStoreGetSyncStateResult))
#define NOTE_STORE_GET_SYNC_STATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_SYNC_STATE_RESULT, NoteStoreGetSyncStateResultClass))
#define IS_NOTE_STORE_GET_SYNC_STATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_SYNC_STATE_RESULT))
#define IS_NOTE_STORE_GET_SYNC_STATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_SYNC_STATE_RESULT))
#define NOTE_STORE_GET_SYNC_STATE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_SYNC_STATE_RESULT, NoteStoreGetSyncStateResultClass))

/* struct NoteStoreGetFilteredSyncChunkArgs */
struct _NoteStoreGetFilteredSyncChunkArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gint32 afterUSN;
  gboolean __isset_afterUSN;
  gint32 maxEntries;
  gboolean __isset_maxEntries;
  SyncChunkFilter * filter;
  gboolean __isset_filter;
};
typedef struct _NoteStoreGetFilteredSyncChunkArgs NoteStoreGetFilteredSyncChunkArgs;

struct _NoteStoreGetFilteredSyncChunkArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetFilteredSyncChunkArgsClass NoteStoreGetFilteredSyncChunkArgsClass;

GType note_store_get_filtered_sync_chunk_args_get_type (void);
#define TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS (note_store_get_filtered_sync_chunk_args_get_type())
#define NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS, NoteStoreGetFilteredSyncChunkArgs))
#define NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS, NoteStoreGetFilteredSyncChunkArgsClass))
#define IS_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS))
#define IS_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS))
#define NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_ARGS, NoteStoreGetFilteredSyncChunkArgsClass))

/* struct NoteStoreGetFilteredSyncChunkResult */
struct _NoteStoreGetFilteredSyncChunkResult
{ 
  ThriftStruct parent; 

  /* public */
  SyncChunk * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreGetFilteredSyncChunkResult NoteStoreGetFilteredSyncChunkResult;

struct _NoteStoreGetFilteredSyncChunkResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetFilteredSyncChunkResultClass NoteStoreGetFilteredSyncChunkResultClass;

GType note_store_get_filtered_sync_chunk_result_get_type (void);
#define TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT (note_store_get_filtered_sync_chunk_result_get_type())
#define NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT, NoteStoreGetFilteredSyncChunkResult))
#define NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT, NoteStoreGetFilteredSyncChunkResultClass))
#define IS_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT))
#define IS_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT))
#define NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_FILTERED_SYNC_CHUNK_RESULT, NoteStoreGetFilteredSyncChunkResultClass))

/* struct NoteStoreGetLinkedNotebookSyncStateArgs */
struct _NoteStoreGetLinkedNotebookSyncStateArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  LinkedNotebook * linkedNotebook;
  gboolean __isset_linkedNotebook;
};
typedef struct _NoteStoreGetLinkedNotebookSyncStateArgs NoteStoreGetLinkedNotebookSyncStateArgs;

struct _NoteStoreGetLinkedNotebookSyncStateArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetLinkedNotebookSyncStateArgsClass NoteStoreGetLinkedNotebookSyncStateArgsClass;

GType note_store_get_linked_notebook_sync_state_args_get_type (void);
#define TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS (note_store_get_linked_notebook_sync_state_args_get_type())
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS, NoteStoreGetLinkedNotebookSyncStateArgs))
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS, NoteStoreGetLinkedNotebookSyncStateArgsClass))
#define IS_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS))
#define IS_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS))
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_ARGS, NoteStoreGetLinkedNotebookSyncStateArgsClass))

/* struct NoteStoreGetLinkedNotebookSyncStateResult */
struct _NoteStoreGetLinkedNotebookSyncStateResult
{ 
  ThriftStruct parent; 

  /* public */
  SyncState * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetLinkedNotebookSyncStateResult NoteStoreGetLinkedNotebookSyncStateResult;

struct _NoteStoreGetLinkedNotebookSyncStateResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetLinkedNotebookSyncStateResultClass NoteStoreGetLinkedNotebookSyncStateResultClass;

GType note_store_get_linked_notebook_sync_state_result_get_type (void);
#define TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT (note_store_get_linked_notebook_sync_state_result_get_type())
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT, NoteStoreGetLinkedNotebookSyncStateResult))
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT, NoteStoreGetLinkedNotebookSyncStateResultClass))
#define IS_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT))
#define IS_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT))
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_STATE_RESULT, NoteStoreGetLinkedNotebookSyncStateResultClass))

/* struct NoteStoreGetLinkedNotebookSyncChunkArgs */
struct _NoteStoreGetLinkedNotebookSyncChunkArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  LinkedNotebook * linkedNotebook;
  gboolean __isset_linkedNotebook;
  gint32 afterUSN;
  gboolean __isset_afterUSN;
  gint32 maxEntries;
  gboolean __isset_maxEntries;
  gboolean fullSyncOnly;
  gboolean __isset_fullSyncOnly;
};
typedef struct _NoteStoreGetLinkedNotebookSyncChunkArgs NoteStoreGetLinkedNotebookSyncChunkArgs;

struct _NoteStoreGetLinkedNotebookSyncChunkArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetLinkedNotebookSyncChunkArgsClass NoteStoreGetLinkedNotebookSyncChunkArgsClass;

GType note_store_get_linked_notebook_sync_chunk_args_get_type (void);
#define TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS (note_store_get_linked_notebook_sync_chunk_args_get_type())
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS, NoteStoreGetLinkedNotebookSyncChunkArgs))
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS, NoteStoreGetLinkedNotebookSyncChunkArgsClass))
#define IS_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS))
#define IS_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS))
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_ARGS, NoteStoreGetLinkedNotebookSyncChunkArgsClass))

/* struct NoteStoreGetLinkedNotebookSyncChunkResult */
struct _NoteStoreGetLinkedNotebookSyncChunkResult
{ 
  ThriftStruct parent; 

  /* public */
  SyncChunk * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetLinkedNotebookSyncChunkResult NoteStoreGetLinkedNotebookSyncChunkResult;

struct _NoteStoreGetLinkedNotebookSyncChunkResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetLinkedNotebookSyncChunkResultClass NoteStoreGetLinkedNotebookSyncChunkResultClass;

GType note_store_get_linked_notebook_sync_chunk_result_get_type (void);
#define TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT (note_store_get_linked_notebook_sync_chunk_result_get_type())
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT, NoteStoreGetLinkedNotebookSyncChunkResult))
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT, NoteStoreGetLinkedNotebookSyncChunkResultClass))
#define IS_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT))
#define IS_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT))
#define NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_LINKED_NOTEBOOK_SYNC_CHUNK_RESULT, NoteStoreGetLinkedNotebookSyncChunkResultClass))

/* struct NoteStoreListNotebooksArgs */
struct _NoteStoreListNotebooksArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreListNotebooksArgs NoteStoreListNotebooksArgs;

struct _NoteStoreListNotebooksArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListNotebooksArgsClass NoteStoreListNotebooksArgsClass;

GType note_store_list_notebooks_args_get_type (void);
#define TYPE_NOTE_STORE_LIST_NOTEBOOKS_ARGS (note_store_list_notebooks_args_get_type())
#define NOTE_STORE_LIST_NOTEBOOKS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_NOTEBOOKS_ARGS, NoteStoreListNotebooksArgs))
#define NOTE_STORE_LIST_NOTEBOOKS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_NOTEBOOKS_ARGS, NoteStoreListNotebooksArgsClass))
#define IS_NOTE_STORE_LIST_NOTEBOOKS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_NOTEBOOKS_ARGS))
#define IS_NOTE_STORE_LIST_NOTEBOOKS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_NOTEBOOKS_ARGS))
#define NOTE_STORE_LIST_NOTEBOOKS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_NOTEBOOKS_ARGS, NoteStoreListNotebooksArgsClass))

/* struct NoteStoreListNotebooksResult */
struct _NoteStoreListNotebooksResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreListNotebooksResult NoteStoreListNotebooksResult;

struct _NoteStoreListNotebooksResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListNotebooksResultClass NoteStoreListNotebooksResultClass;

GType note_store_list_notebooks_result_get_type (void);
#define TYPE_NOTE_STORE_LIST_NOTEBOOKS_RESULT (note_store_list_notebooks_result_get_type())
#define NOTE_STORE_LIST_NOTEBOOKS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_NOTEBOOKS_RESULT, NoteStoreListNotebooksResult))
#define NOTE_STORE_LIST_NOTEBOOKS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_NOTEBOOKS_RESULT, NoteStoreListNotebooksResultClass))
#define IS_NOTE_STORE_LIST_NOTEBOOKS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_NOTEBOOKS_RESULT))
#define IS_NOTE_STORE_LIST_NOTEBOOKS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_NOTEBOOKS_RESULT))
#define NOTE_STORE_LIST_NOTEBOOKS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_NOTEBOOKS_RESULT, NoteStoreListNotebooksResultClass))

/* struct NoteStoreListAccessibleBusinessNotebooksArgs */
struct _NoteStoreListAccessibleBusinessNotebooksArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreListAccessibleBusinessNotebooksArgs NoteStoreListAccessibleBusinessNotebooksArgs;

struct _NoteStoreListAccessibleBusinessNotebooksArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListAccessibleBusinessNotebooksArgsClass NoteStoreListAccessibleBusinessNotebooksArgsClass;

GType note_store_list_accessible_business_notebooks_args_get_type (void);
#define TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS (note_store_list_accessible_business_notebooks_args_get_type())
#define NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS, NoteStoreListAccessibleBusinessNotebooksArgs))
#define NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS, NoteStoreListAccessibleBusinessNotebooksArgsClass))
#define IS_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS))
#define IS_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS))
#define NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_ARGS, NoteStoreListAccessibleBusinessNotebooksArgsClass))

/* struct NoteStoreListAccessibleBusinessNotebooksResult */
struct _NoteStoreListAccessibleBusinessNotebooksResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreListAccessibleBusinessNotebooksResult NoteStoreListAccessibleBusinessNotebooksResult;

struct _NoteStoreListAccessibleBusinessNotebooksResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListAccessibleBusinessNotebooksResultClass NoteStoreListAccessibleBusinessNotebooksResultClass;

GType note_store_list_accessible_business_notebooks_result_get_type (void);
#define TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT (note_store_list_accessible_business_notebooks_result_get_type())
#define NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT, NoteStoreListAccessibleBusinessNotebooksResult))
#define NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT, NoteStoreListAccessibleBusinessNotebooksResultClass))
#define IS_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT))
#define IS_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT))
#define NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_ACCESSIBLE_BUSINESS_NOTEBOOKS_RESULT, NoteStoreListAccessibleBusinessNotebooksResultClass))

/* struct NoteStoreGetNotebookArgs */
struct _NoteStoreGetNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetNotebookArgs NoteStoreGetNotebookArgs;

struct _NoteStoreGetNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNotebookArgsClass NoteStoreGetNotebookArgsClass;

GType note_store_get_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTEBOOK_ARGS (note_store_get_notebook_args_get_type())
#define NOTE_STORE_GET_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_ARGS, NoteStoreGetNotebookArgs))
#define NOTE_STORE_GET_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTEBOOK_ARGS, NoteStoreGetNotebookArgsClass))
#define IS_NOTE_STORE_GET_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_GET_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTEBOOK_ARGS))
#define NOTE_STORE_GET_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_ARGS, NoteStoreGetNotebookArgsClass))

/* struct NoteStoreGetNotebookResult */
struct _NoteStoreGetNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  Notebook * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNotebookResult NoteStoreGetNotebookResult;

struct _NoteStoreGetNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNotebookResultClass NoteStoreGetNotebookResultClass;

GType note_store_get_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTEBOOK_RESULT (note_store_get_notebook_result_get_type())
#define NOTE_STORE_GET_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_RESULT, NoteStoreGetNotebookResult))
#define NOTE_STORE_GET_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTEBOOK_RESULT, NoteStoreGetNotebookResultClass))
#define IS_NOTE_STORE_GET_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_GET_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTEBOOK_RESULT))
#define NOTE_STORE_GET_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_RESULT, NoteStoreGetNotebookResultClass))

/* struct NoteStoreGetDefaultNotebookArgs */
struct _NoteStoreGetDefaultNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreGetDefaultNotebookArgs NoteStoreGetDefaultNotebookArgs;

struct _NoteStoreGetDefaultNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetDefaultNotebookArgsClass NoteStoreGetDefaultNotebookArgsClass;

GType note_store_get_default_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS (note_store_get_default_notebook_args_get_type())
#define NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS, NoteStoreGetDefaultNotebookArgs))
#define NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS, NoteStoreGetDefaultNotebookArgsClass))
#define IS_NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS))
#define NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_ARGS, NoteStoreGetDefaultNotebookArgsClass))

/* struct NoteStoreGetDefaultNotebookResult */
struct _NoteStoreGetDefaultNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  Notebook * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreGetDefaultNotebookResult NoteStoreGetDefaultNotebookResult;

struct _NoteStoreGetDefaultNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetDefaultNotebookResultClass NoteStoreGetDefaultNotebookResultClass;

GType note_store_get_default_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT (note_store_get_default_notebook_result_get_type())
#define NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT, NoteStoreGetDefaultNotebookResult))
#define NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT, NoteStoreGetDefaultNotebookResultClass))
#define IS_NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT))
#define NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_DEFAULT_NOTEBOOK_RESULT, NoteStoreGetDefaultNotebookResultClass))

/* struct NoteStoreCreateNotebookArgs */
struct _NoteStoreCreateNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  Notebook * notebook;
  gboolean __isset_notebook;
};
typedef struct _NoteStoreCreateNotebookArgs NoteStoreCreateNotebookArgs;

struct _NoteStoreCreateNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateNotebookArgsClass NoteStoreCreateNotebookArgsClass;

GType note_store_create_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_CREATE_NOTEBOOK_ARGS (note_store_create_notebook_args_get_type())
#define NOTE_STORE_CREATE_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_NOTEBOOK_ARGS, NoteStoreCreateNotebookArgs))
#define NOTE_STORE_CREATE_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_NOTEBOOK_ARGS, NoteStoreCreateNotebookArgsClass))
#define IS_NOTE_STORE_CREATE_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_CREATE_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_NOTEBOOK_ARGS))
#define NOTE_STORE_CREATE_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_NOTEBOOK_ARGS, NoteStoreCreateNotebookArgsClass))

/* struct NoteStoreCreateNotebookResult */
struct _NoteStoreCreateNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  Notebook * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreCreateNotebookResult NoteStoreCreateNotebookResult;

struct _NoteStoreCreateNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateNotebookResultClass NoteStoreCreateNotebookResultClass;

GType note_store_create_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_CREATE_NOTEBOOK_RESULT (note_store_create_notebook_result_get_type())
#define NOTE_STORE_CREATE_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_NOTEBOOK_RESULT, NoteStoreCreateNotebookResult))
#define NOTE_STORE_CREATE_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_NOTEBOOK_RESULT, NoteStoreCreateNotebookResultClass))
#define IS_NOTE_STORE_CREATE_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_CREATE_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_NOTEBOOK_RESULT))
#define NOTE_STORE_CREATE_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_NOTEBOOK_RESULT, NoteStoreCreateNotebookResultClass))

/* struct NoteStoreUpdateNotebookArgs */
struct _NoteStoreUpdateNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  Notebook * notebook;
  gboolean __isset_notebook;
};
typedef struct _NoteStoreUpdateNotebookArgs NoteStoreUpdateNotebookArgs;

struct _NoteStoreUpdateNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateNotebookArgsClass NoteStoreUpdateNotebookArgsClass;

GType note_store_update_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_NOTEBOOK_ARGS (note_store_update_notebook_args_get_type())
#define NOTE_STORE_UPDATE_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_NOTEBOOK_ARGS, NoteStoreUpdateNotebookArgs))
#define NOTE_STORE_UPDATE_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_NOTEBOOK_ARGS, NoteStoreUpdateNotebookArgsClass))
#define IS_NOTE_STORE_UPDATE_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_UPDATE_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_NOTEBOOK_ARGS))
#define NOTE_STORE_UPDATE_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_NOTEBOOK_ARGS, NoteStoreUpdateNotebookArgsClass))

/* struct NoteStoreUpdateNotebookResult */
struct _NoteStoreUpdateNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreUpdateNotebookResult NoteStoreUpdateNotebookResult;

struct _NoteStoreUpdateNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateNotebookResultClass NoteStoreUpdateNotebookResultClass;

GType note_store_update_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_NOTEBOOK_RESULT (note_store_update_notebook_result_get_type())
#define NOTE_STORE_UPDATE_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_NOTEBOOK_RESULT, NoteStoreUpdateNotebookResult))
#define NOTE_STORE_UPDATE_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_NOTEBOOK_RESULT, NoteStoreUpdateNotebookResultClass))
#define IS_NOTE_STORE_UPDATE_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_UPDATE_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_NOTEBOOK_RESULT))
#define NOTE_STORE_UPDATE_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_NOTEBOOK_RESULT, NoteStoreUpdateNotebookResultClass))

/* struct NoteStoreExpungeNotebookArgs */
struct _NoteStoreExpungeNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreExpungeNotebookArgs NoteStoreExpungeNotebookArgs;

struct _NoteStoreExpungeNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeNotebookArgsClass NoteStoreExpungeNotebookArgsClass;

GType note_store_expunge_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS (note_store_expunge_notebook_args_get_type())
#define NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS, NoteStoreExpungeNotebookArgs))
#define NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS, NoteStoreExpungeNotebookArgsClass))
#define IS_NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS))
#define NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_ARGS, NoteStoreExpungeNotebookArgsClass))

/* struct NoteStoreExpungeNotebookResult */
struct _NoteStoreExpungeNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreExpungeNotebookResult NoteStoreExpungeNotebookResult;

struct _NoteStoreExpungeNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeNotebookResultClass NoteStoreExpungeNotebookResultClass;

GType note_store_expunge_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT (note_store_expunge_notebook_result_get_type())
#define NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT, NoteStoreExpungeNotebookResult))
#define NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT, NoteStoreExpungeNotebookResultClass))
#define IS_NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT))
#define NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTEBOOK_RESULT, NoteStoreExpungeNotebookResultClass))

/* struct NoteStoreListTagsArgs */
struct _NoteStoreListTagsArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreListTagsArgs NoteStoreListTagsArgs;

struct _NoteStoreListTagsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListTagsArgsClass NoteStoreListTagsArgsClass;

GType note_store_list_tags_args_get_type (void);
#define TYPE_NOTE_STORE_LIST_TAGS_ARGS (note_store_list_tags_args_get_type())
#define NOTE_STORE_LIST_TAGS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_TAGS_ARGS, NoteStoreListTagsArgs))
#define NOTE_STORE_LIST_TAGS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_TAGS_ARGS, NoteStoreListTagsArgsClass))
#define IS_NOTE_STORE_LIST_TAGS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_TAGS_ARGS))
#define IS_NOTE_STORE_LIST_TAGS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_TAGS_ARGS))
#define NOTE_STORE_LIST_TAGS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_TAGS_ARGS, NoteStoreListTagsArgsClass))

/* struct NoteStoreListTagsResult */
struct _NoteStoreListTagsResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreListTagsResult NoteStoreListTagsResult;

struct _NoteStoreListTagsResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListTagsResultClass NoteStoreListTagsResultClass;

GType note_store_list_tags_result_get_type (void);
#define TYPE_NOTE_STORE_LIST_TAGS_RESULT (note_store_list_tags_result_get_type())
#define NOTE_STORE_LIST_TAGS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_TAGS_RESULT, NoteStoreListTagsResult))
#define NOTE_STORE_LIST_TAGS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_TAGS_RESULT, NoteStoreListTagsResultClass))
#define IS_NOTE_STORE_LIST_TAGS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_TAGS_RESULT))
#define IS_NOTE_STORE_LIST_TAGS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_TAGS_RESULT))
#define NOTE_STORE_LIST_TAGS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_TAGS_RESULT, NoteStoreListTagsResultClass))

/* struct NoteStoreListTagsByNotebookArgs */
struct _NoteStoreListTagsByNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * notebookGuid;
  gboolean __isset_notebookGuid;
};
typedef struct _NoteStoreListTagsByNotebookArgs NoteStoreListTagsByNotebookArgs;

struct _NoteStoreListTagsByNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListTagsByNotebookArgsClass NoteStoreListTagsByNotebookArgsClass;

GType note_store_list_tags_by_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS (note_store_list_tags_by_notebook_args_get_type())
#define NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS, NoteStoreListTagsByNotebookArgs))
#define NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS, NoteStoreListTagsByNotebookArgsClass))
#define IS_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS))
#define NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_ARGS, NoteStoreListTagsByNotebookArgsClass))

/* struct NoteStoreListTagsByNotebookResult */
struct _NoteStoreListTagsByNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreListTagsByNotebookResult NoteStoreListTagsByNotebookResult;

struct _NoteStoreListTagsByNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListTagsByNotebookResultClass NoteStoreListTagsByNotebookResultClass;

GType note_store_list_tags_by_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT (note_store_list_tags_by_notebook_result_get_type())
#define NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT, NoteStoreListTagsByNotebookResult))
#define NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT, NoteStoreListTagsByNotebookResultClass))
#define IS_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT))
#define NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_TAGS_BY_NOTEBOOK_RESULT, NoteStoreListTagsByNotebookResultClass))

/* struct NoteStoreGetTagArgs */
struct _NoteStoreGetTagArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetTagArgs NoteStoreGetTagArgs;

struct _NoteStoreGetTagArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetTagArgsClass NoteStoreGetTagArgsClass;

GType note_store_get_tag_args_get_type (void);
#define TYPE_NOTE_STORE_GET_TAG_ARGS (note_store_get_tag_args_get_type())
#define NOTE_STORE_GET_TAG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_TAG_ARGS, NoteStoreGetTagArgs))
#define NOTE_STORE_GET_TAG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_TAG_ARGS, NoteStoreGetTagArgsClass))
#define IS_NOTE_STORE_GET_TAG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_TAG_ARGS))
#define IS_NOTE_STORE_GET_TAG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_TAG_ARGS))
#define NOTE_STORE_GET_TAG_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_TAG_ARGS, NoteStoreGetTagArgsClass))

/* struct NoteStoreGetTagResult */
struct _NoteStoreGetTagResult
{ 
  ThriftStruct parent; 

  /* public */
  Tag * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetTagResult NoteStoreGetTagResult;

struct _NoteStoreGetTagResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetTagResultClass NoteStoreGetTagResultClass;

GType note_store_get_tag_result_get_type (void);
#define TYPE_NOTE_STORE_GET_TAG_RESULT (note_store_get_tag_result_get_type())
#define NOTE_STORE_GET_TAG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_TAG_RESULT, NoteStoreGetTagResult))
#define NOTE_STORE_GET_TAG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_TAG_RESULT, NoteStoreGetTagResultClass))
#define IS_NOTE_STORE_GET_TAG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_TAG_RESULT))
#define IS_NOTE_STORE_GET_TAG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_TAG_RESULT))
#define NOTE_STORE_GET_TAG_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_TAG_RESULT, NoteStoreGetTagResultClass))

/* struct NoteStoreCreateTagArgs */
struct _NoteStoreCreateTagArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  Tag * tag;
  gboolean __isset_tag;
};
typedef struct _NoteStoreCreateTagArgs NoteStoreCreateTagArgs;

struct _NoteStoreCreateTagArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateTagArgsClass NoteStoreCreateTagArgsClass;

GType note_store_create_tag_args_get_type (void);
#define TYPE_NOTE_STORE_CREATE_TAG_ARGS (note_store_create_tag_args_get_type())
#define NOTE_STORE_CREATE_TAG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_TAG_ARGS, NoteStoreCreateTagArgs))
#define NOTE_STORE_CREATE_TAG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_TAG_ARGS, NoteStoreCreateTagArgsClass))
#define IS_NOTE_STORE_CREATE_TAG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_TAG_ARGS))
#define IS_NOTE_STORE_CREATE_TAG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_TAG_ARGS))
#define NOTE_STORE_CREATE_TAG_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_TAG_ARGS, NoteStoreCreateTagArgsClass))

/* struct NoteStoreCreateTagResult */
struct _NoteStoreCreateTagResult
{ 
  ThriftStruct parent; 

  /* public */
  Tag * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreCreateTagResult NoteStoreCreateTagResult;

struct _NoteStoreCreateTagResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateTagResultClass NoteStoreCreateTagResultClass;

GType note_store_create_tag_result_get_type (void);
#define TYPE_NOTE_STORE_CREATE_TAG_RESULT (note_store_create_tag_result_get_type())
#define NOTE_STORE_CREATE_TAG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_TAG_RESULT, NoteStoreCreateTagResult))
#define NOTE_STORE_CREATE_TAG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_TAG_RESULT, NoteStoreCreateTagResultClass))
#define IS_NOTE_STORE_CREATE_TAG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_TAG_RESULT))
#define IS_NOTE_STORE_CREATE_TAG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_TAG_RESULT))
#define NOTE_STORE_CREATE_TAG_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_TAG_RESULT, NoteStoreCreateTagResultClass))

/* struct NoteStoreUpdateTagArgs */
struct _NoteStoreUpdateTagArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  Tag * tag;
  gboolean __isset_tag;
};
typedef struct _NoteStoreUpdateTagArgs NoteStoreUpdateTagArgs;

struct _NoteStoreUpdateTagArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateTagArgsClass NoteStoreUpdateTagArgsClass;

GType note_store_update_tag_args_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_TAG_ARGS (note_store_update_tag_args_get_type())
#define NOTE_STORE_UPDATE_TAG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_TAG_ARGS, NoteStoreUpdateTagArgs))
#define NOTE_STORE_UPDATE_TAG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_TAG_ARGS, NoteStoreUpdateTagArgsClass))
#define IS_NOTE_STORE_UPDATE_TAG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_TAG_ARGS))
#define IS_NOTE_STORE_UPDATE_TAG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_TAG_ARGS))
#define NOTE_STORE_UPDATE_TAG_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_TAG_ARGS, NoteStoreUpdateTagArgsClass))

/* struct NoteStoreUpdateTagResult */
struct _NoteStoreUpdateTagResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreUpdateTagResult NoteStoreUpdateTagResult;

struct _NoteStoreUpdateTagResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateTagResultClass NoteStoreUpdateTagResultClass;

GType note_store_update_tag_result_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_TAG_RESULT (note_store_update_tag_result_get_type())
#define NOTE_STORE_UPDATE_TAG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_TAG_RESULT, NoteStoreUpdateTagResult))
#define NOTE_STORE_UPDATE_TAG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_TAG_RESULT, NoteStoreUpdateTagResultClass))
#define IS_NOTE_STORE_UPDATE_TAG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_TAG_RESULT))
#define IS_NOTE_STORE_UPDATE_TAG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_TAG_RESULT))
#define NOTE_STORE_UPDATE_TAG_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_TAG_RESULT, NoteStoreUpdateTagResultClass))

/* struct NoteStoreUntagAllArgs */
struct _NoteStoreUntagAllArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreUntagAllArgs NoteStoreUntagAllArgs;

struct _NoteStoreUntagAllArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUntagAllArgsClass NoteStoreUntagAllArgsClass;

GType note_store_untag_all_args_get_type (void);
#define TYPE_NOTE_STORE_UNTAG_ALL_ARGS (note_store_untag_all_args_get_type())
#define NOTE_STORE_UNTAG_ALL_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UNTAG_ALL_ARGS, NoteStoreUntagAllArgs))
#define NOTE_STORE_UNTAG_ALL_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UNTAG_ALL_ARGS, NoteStoreUntagAllArgsClass))
#define IS_NOTE_STORE_UNTAG_ALL_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UNTAG_ALL_ARGS))
#define IS_NOTE_STORE_UNTAG_ALL_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UNTAG_ALL_ARGS))
#define NOTE_STORE_UNTAG_ALL_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UNTAG_ALL_ARGS, NoteStoreUntagAllArgsClass))

/* struct NoteStoreUntagAllResult */
struct _NoteStoreUntagAllResult
{ 
  ThriftStruct parent; 

  /* public */
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreUntagAllResult NoteStoreUntagAllResult;

struct _NoteStoreUntagAllResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUntagAllResultClass NoteStoreUntagAllResultClass;

GType note_store_untag_all_result_get_type (void);
#define TYPE_NOTE_STORE_UNTAG_ALL_RESULT (note_store_untag_all_result_get_type())
#define NOTE_STORE_UNTAG_ALL_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UNTAG_ALL_RESULT, NoteStoreUntagAllResult))
#define NOTE_STORE_UNTAG_ALL_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UNTAG_ALL_RESULT, NoteStoreUntagAllResultClass))
#define IS_NOTE_STORE_UNTAG_ALL_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UNTAG_ALL_RESULT))
#define IS_NOTE_STORE_UNTAG_ALL_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UNTAG_ALL_RESULT))
#define NOTE_STORE_UNTAG_ALL_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UNTAG_ALL_RESULT, NoteStoreUntagAllResultClass))

/* struct NoteStoreExpungeTagArgs */
struct _NoteStoreExpungeTagArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreExpungeTagArgs NoteStoreExpungeTagArgs;

struct _NoteStoreExpungeTagArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeTagArgsClass NoteStoreExpungeTagArgsClass;

GType note_store_expunge_tag_args_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_TAG_ARGS (note_store_expunge_tag_args_get_type())
#define NOTE_STORE_EXPUNGE_TAG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_TAG_ARGS, NoteStoreExpungeTagArgs))
#define NOTE_STORE_EXPUNGE_TAG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_TAG_ARGS, NoteStoreExpungeTagArgsClass))
#define IS_NOTE_STORE_EXPUNGE_TAG_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_TAG_ARGS))
#define IS_NOTE_STORE_EXPUNGE_TAG_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_TAG_ARGS))
#define NOTE_STORE_EXPUNGE_TAG_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_TAG_ARGS, NoteStoreExpungeTagArgsClass))

/* struct NoteStoreExpungeTagResult */
struct _NoteStoreExpungeTagResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreExpungeTagResult NoteStoreExpungeTagResult;

struct _NoteStoreExpungeTagResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeTagResultClass NoteStoreExpungeTagResultClass;

GType note_store_expunge_tag_result_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_TAG_RESULT (note_store_expunge_tag_result_get_type())
#define NOTE_STORE_EXPUNGE_TAG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_TAG_RESULT, NoteStoreExpungeTagResult))
#define NOTE_STORE_EXPUNGE_TAG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_TAG_RESULT, NoteStoreExpungeTagResultClass))
#define IS_NOTE_STORE_EXPUNGE_TAG_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_TAG_RESULT))
#define IS_NOTE_STORE_EXPUNGE_TAG_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_TAG_RESULT))
#define NOTE_STORE_EXPUNGE_TAG_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_TAG_RESULT, NoteStoreExpungeTagResultClass))

/* struct NoteStoreListSearchesArgs */
struct _NoteStoreListSearchesArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreListSearchesArgs NoteStoreListSearchesArgs;

struct _NoteStoreListSearchesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListSearchesArgsClass NoteStoreListSearchesArgsClass;

GType note_store_list_searches_args_get_type (void);
#define TYPE_NOTE_STORE_LIST_SEARCHES_ARGS (note_store_list_searches_args_get_type())
#define NOTE_STORE_LIST_SEARCHES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_SEARCHES_ARGS, NoteStoreListSearchesArgs))
#define NOTE_STORE_LIST_SEARCHES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_SEARCHES_ARGS, NoteStoreListSearchesArgsClass))
#define IS_NOTE_STORE_LIST_SEARCHES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_SEARCHES_ARGS))
#define IS_NOTE_STORE_LIST_SEARCHES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_SEARCHES_ARGS))
#define NOTE_STORE_LIST_SEARCHES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_SEARCHES_ARGS, NoteStoreListSearchesArgsClass))

/* struct NoteStoreListSearchesResult */
struct _NoteStoreListSearchesResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreListSearchesResult NoteStoreListSearchesResult;

struct _NoteStoreListSearchesResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListSearchesResultClass NoteStoreListSearchesResultClass;

GType note_store_list_searches_result_get_type (void);
#define TYPE_NOTE_STORE_LIST_SEARCHES_RESULT (note_store_list_searches_result_get_type())
#define NOTE_STORE_LIST_SEARCHES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_SEARCHES_RESULT, NoteStoreListSearchesResult))
#define NOTE_STORE_LIST_SEARCHES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_SEARCHES_RESULT, NoteStoreListSearchesResultClass))
#define IS_NOTE_STORE_LIST_SEARCHES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_SEARCHES_RESULT))
#define IS_NOTE_STORE_LIST_SEARCHES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_SEARCHES_RESULT))
#define NOTE_STORE_LIST_SEARCHES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_SEARCHES_RESULT, NoteStoreListSearchesResultClass))

/* struct NoteStoreGetSearchArgs */
struct _NoteStoreGetSearchArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetSearchArgs NoteStoreGetSearchArgs;

struct _NoteStoreGetSearchArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetSearchArgsClass NoteStoreGetSearchArgsClass;

GType note_store_get_search_args_get_type (void);
#define TYPE_NOTE_STORE_GET_SEARCH_ARGS (note_store_get_search_args_get_type())
#define NOTE_STORE_GET_SEARCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_SEARCH_ARGS, NoteStoreGetSearchArgs))
#define NOTE_STORE_GET_SEARCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_SEARCH_ARGS, NoteStoreGetSearchArgsClass))
#define IS_NOTE_STORE_GET_SEARCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_SEARCH_ARGS))
#define IS_NOTE_STORE_GET_SEARCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_SEARCH_ARGS))
#define NOTE_STORE_GET_SEARCH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_SEARCH_ARGS, NoteStoreGetSearchArgsClass))

/* struct NoteStoreGetSearchResult */
struct _NoteStoreGetSearchResult
{ 
  ThriftStruct parent; 

  /* public */
  SavedSearch * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetSearchResult NoteStoreGetSearchResult;

struct _NoteStoreGetSearchResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetSearchResultClass NoteStoreGetSearchResultClass;

GType note_store_get_search_result_get_type (void);
#define TYPE_NOTE_STORE_GET_SEARCH_RESULT (note_store_get_search_result_get_type())
#define NOTE_STORE_GET_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_SEARCH_RESULT, NoteStoreGetSearchResult))
#define NOTE_STORE_GET_SEARCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_SEARCH_RESULT, NoteStoreGetSearchResultClass))
#define IS_NOTE_STORE_GET_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_SEARCH_RESULT))
#define IS_NOTE_STORE_GET_SEARCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_SEARCH_RESULT))
#define NOTE_STORE_GET_SEARCH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_SEARCH_RESULT, NoteStoreGetSearchResultClass))

/* struct NoteStoreCreateSearchArgs */
struct _NoteStoreCreateSearchArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  SavedSearch * search;
  gboolean __isset_search;
};
typedef struct _NoteStoreCreateSearchArgs NoteStoreCreateSearchArgs;

struct _NoteStoreCreateSearchArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateSearchArgsClass NoteStoreCreateSearchArgsClass;

GType note_store_create_search_args_get_type (void);
#define TYPE_NOTE_STORE_CREATE_SEARCH_ARGS (note_store_create_search_args_get_type())
#define NOTE_STORE_CREATE_SEARCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_SEARCH_ARGS, NoteStoreCreateSearchArgs))
#define NOTE_STORE_CREATE_SEARCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_SEARCH_ARGS, NoteStoreCreateSearchArgsClass))
#define IS_NOTE_STORE_CREATE_SEARCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_SEARCH_ARGS))
#define IS_NOTE_STORE_CREATE_SEARCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_SEARCH_ARGS))
#define NOTE_STORE_CREATE_SEARCH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_SEARCH_ARGS, NoteStoreCreateSearchArgsClass))

/* struct NoteStoreCreateSearchResult */
struct _NoteStoreCreateSearchResult
{ 
  ThriftStruct parent; 

  /* public */
  SavedSearch * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreCreateSearchResult NoteStoreCreateSearchResult;

struct _NoteStoreCreateSearchResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateSearchResultClass NoteStoreCreateSearchResultClass;

GType note_store_create_search_result_get_type (void);
#define TYPE_NOTE_STORE_CREATE_SEARCH_RESULT (note_store_create_search_result_get_type())
#define NOTE_STORE_CREATE_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_SEARCH_RESULT, NoteStoreCreateSearchResult))
#define NOTE_STORE_CREATE_SEARCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_SEARCH_RESULT, NoteStoreCreateSearchResultClass))
#define IS_NOTE_STORE_CREATE_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_SEARCH_RESULT))
#define IS_NOTE_STORE_CREATE_SEARCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_SEARCH_RESULT))
#define NOTE_STORE_CREATE_SEARCH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_SEARCH_RESULT, NoteStoreCreateSearchResultClass))

/* struct NoteStoreUpdateSearchArgs */
struct _NoteStoreUpdateSearchArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  SavedSearch * search;
  gboolean __isset_search;
};
typedef struct _NoteStoreUpdateSearchArgs NoteStoreUpdateSearchArgs;

struct _NoteStoreUpdateSearchArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateSearchArgsClass NoteStoreUpdateSearchArgsClass;

GType note_store_update_search_args_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_SEARCH_ARGS (note_store_update_search_args_get_type())
#define NOTE_STORE_UPDATE_SEARCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_SEARCH_ARGS, NoteStoreUpdateSearchArgs))
#define NOTE_STORE_UPDATE_SEARCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_SEARCH_ARGS, NoteStoreUpdateSearchArgsClass))
#define IS_NOTE_STORE_UPDATE_SEARCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_SEARCH_ARGS))
#define IS_NOTE_STORE_UPDATE_SEARCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_SEARCH_ARGS))
#define NOTE_STORE_UPDATE_SEARCH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_SEARCH_ARGS, NoteStoreUpdateSearchArgsClass))

/* struct NoteStoreUpdateSearchResult */
struct _NoteStoreUpdateSearchResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreUpdateSearchResult NoteStoreUpdateSearchResult;

struct _NoteStoreUpdateSearchResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateSearchResultClass NoteStoreUpdateSearchResultClass;

GType note_store_update_search_result_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_SEARCH_RESULT (note_store_update_search_result_get_type())
#define NOTE_STORE_UPDATE_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_SEARCH_RESULT, NoteStoreUpdateSearchResult))
#define NOTE_STORE_UPDATE_SEARCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_SEARCH_RESULT, NoteStoreUpdateSearchResultClass))
#define IS_NOTE_STORE_UPDATE_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_SEARCH_RESULT))
#define IS_NOTE_STORE_UPDATE_SEARCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_SEARCH_RESULT))
#define NOTE_STORE_UPDATE_SEARCH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_SEARCH_RESULT, NoteStoreUpdateSearchResultClass))

/* struct NoteStoreExpungeSearchArgs */
struct _NoteStoreExpungeSearchArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreExpungeSearchArgs NoteStoreExpungeSearchArgs;

struct _NoteStoreExpungeSearchArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeSearchArgsClass NoteStoreExpungeSearchArgsClass;

GType note_store_expunge_search_args_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_SEARCH_ARGS (note_store_expunge_search_args_get_type())
#define NOTE_STORE_EXPUNGE_SEARCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_SEARCH_ARGS, NoteStoreExpungeSearchArgs))
#define NOTE_STORE_EXPUNGE_SEARCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_SEARCH_ARGS, NoteStoreExpungeSearchArgsClass))
#define IS_NOTE_STORE_EXPUNGE_SEARCH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_SEARCH_ARGS))
#define IS_NOTE_STORE_EXPUNGE_SEARCH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_SEARCH_ARGS))
#define NOTE_STORE_EXPUNGE_SEARCH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_SEARCH_ARGS, NoteStoreExpungeSearchArgsClass))

/* struct NoteStoreExpungeSearchResult */
struct _NoteStoreExpungeSearchResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreExpungeSearchResult NoteStoreExpungeSearchResult;

struct _NoteStoreExpungeSearchResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeSearchResultClass NoteStoreExpungeSearchResultClass;

GType note_store_expunge_search_result_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_SEARCH_RESULT (note_store_expunge_search_result_get_type())
#define NOTE_STORE_EXPUNGE_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_SEARCH_RESULT, NoteStoreExpungeSearchResult))
#define NOTE_STORE_EXPUNGE_SEARCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_SEARCH_RESULT, NoteStoreExpungeSearchResultClass))
#define IS_NOTE_STORE_EXPUNGE_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_SEARCH_RESULT))
#define IS_NOTE_STORE_EXPUNGE_SEARCH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_SEARCH_RESULT))
#define NOTE_STORE_EXPUNGE_SEARCH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_SEARCH_RESULT, NoteStoreExpungeSearchResultClass))

/* struct NoteStoreFindNoteOffsetArgs */
struct _NoteStoreFindNoteOffsetArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  NoteFilter * filter;
  gboolean __isset_filter;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreFindNoteOffsetArgs NoteStoreFindNoteOffsetArgs;

struct _NoteStoreFindNoteOffsetArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreFindNoteOffsetArgsClass NoteStoreFindNoteOffsetArgsClass;

GType note_store_find_note_offset_args_get_type (void);
#define TYPE_NOTE_STORE_FIND_NOTE_OFFSET_ARGS (note_store_find_note_offset_args_get_type())
#define NOTE_STORE_FIND_NOTE_OFFSET_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_FIND_NOTE_OFFSET_ARGS, NoteStoreFindNoteOffsetArgs))
#define NOTE_STORE_FIND_NOTE_OFFSET_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_FIND_NOTE_OFFSET_ARGS, NoteStoreFindNoteOffsetArgsClass))
#define IS_NOTE_STORE_FIND_NOTE_OFFSET_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_FIND_NOTE_OFFSET_ARGS))
#define IS_NOTE_STORE_FIND_NOTE_OFFSET_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_FIND_NOTE_OFFSET_ARGS))
#define NOTE_STORE_FIND_NOTE_OFFSET_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_FIND_NOTE_OFFSET_ARGS, NoteStoreFindNoteOffsetArgsClass))

/* struct NoteStoreFindNoteOffsetResult */
struct _NoteStoreFindNoteOffsetResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreFindNoteOffsetResult NoteStoreFindNoteOffsetResult;

struct _NoteStoreFindNoteOffsetResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreFindNoteOffsetResultClass NoteStoreFindNoteOffsetResultClass;

GType note_store_find_note_offset_result_get_type (void);
#define TYPE_NOTE_STORE_FIND_NOTE_OFFSET_RESULT (note_store_find_note_offset_result_get_type())
#define NOTE_STORE_FIND_NOTE_OFFSET_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_FIND_NOTE_OFFSET_RESULT, NoteStoreFindNoteOffsetResult))
#define NOTE_STORE_FIND_NOTE_OFFSET_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_FIND_NOTE_OFFSET_RESULT, NoteStoreFindNoteOffsetResultClass))
#define IS_NOTE_STORE_FIND_NOTE_OFFSET_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_FIND_NOTE_OFFSET_RESULT))
#define IS_NOTE_STORE_FIND_NOTE_OFFSET_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_FIND_NOTE_OFFSET_RESULT))
#define NOTE_STORE_FIND_NOTE_OFFSET_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_FIND_NOTE_OFFSET_RESULT, NoteStoreFindNoteOffsetResultClass))

/* struct NoteStoreFindNotesMetadataArgs */
struct _NoteStoreFindNotesMetadataArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  NoteFilter * filter;
  gboolean __isset_filter;
  gint32 offset;
  gboolean __isset_offset;
  gint32 maxNotes;
  gboolean __isset_maxNotes;
  NotesMetadataResultSpec * resultSpec;
  gboolean __isset_resultSpec;
};
typedef struct _NoteStoreFindNotesMetadataArgs NoteStoreFindNotesMetadataArgs;

struct _NoteStoreFindNotesMetadataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreFindNotesMetadataArgsClass NoteStoreFindNotesMetadataArgsClass;

GType note_store_find_notes_metadata_args_get_type (void);
#define TYPE_NOTE_STORE_FIND_NOTES_METADATA_ARGS (note_store_find_notes_metadata_args_get_type())
#define NOTE_STORE_FIND_NOTES_METADATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_FIND_NOTES_METADATA_ARGS, NoteStoreFindNotesMetadataArgs))
#define NOTE_STORE_FIND_NOTES_METADATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_FIND_NOTES_METADATA_ARGS, NoteStoreFindNotesMetadataArgsClass))
#define IS_NOTE_STORE_FIND_NOTES_METADATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_FIND_NOTES_METADATA_ARGS))
#define IS_NOTE_STORE_FIND_NOTES_METADATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_FIND_NOTES_METADATA_ARGS))
#define NOTE_STORE_FIND_NOTES_METADATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_FIND_NOTES_METADATA_ARGS, NoteStoreFindNotesMetadataArgsClass))

/* struct NoteStoreFindNotesMetadataResult */
struct _NoteStoreFindNotesMetadataResult
{ 
  ThriftStruct parent; 

  /* public */
  NotesMetadataList * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreFindNotesMetadataResult NoteStoreFindNotesMetadataResult;

struct _NoteStoreFindNotesMetadataResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreFindNotesMetadataResultClass NoteStoreFindNotesMetadataResultClass;

GType note_store_find_notes_metadata_result_get_type (void);
#define TYPE_NOTE_STORE_FIND_NOTES_METADATA_RESULT (note_store_find_notes_metadata_result_get_type())
#define NOTE_STORE_FIND_NOTES_METADATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_FIND_NOTES_METADATA_RESULT, NoteStoreFindNotesMetadataResult))
#define NOTE_STORE_FIND_NOTES_METADATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_FIND_NOTES_METADATA_RESULT, NoteStoreFindNotesMetadataResultClass))
#define IS_NOTE_STORE_FIND_NOTES_METADATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_FIND_NOTES_METADATA_RESULT))
#define IS_NOTE_STORE_FIND_NOTES_METADATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_FIND_NOTES_METADATA_RESULT))
#define NOTE_STORE_FIND_NOTES_METADATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_FIND_NOTES_METADATA_RESULT, NoteStoreFindNotesMetadataResultClass))

/* struct NoteStoreFindNoteCountsArgs */
struct _NoteStoreFindNoteCountsArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  NoteFilter * filter;
  gboolean __isset_filter;
  gboolean withTrash;
  gboolean __isset_withTrash;
};
typedef struct _NoteStoreFindNoteCountsArgs NoteStoreFindNoteCountsArgs;

struct _NoteStoreFindNoteCountsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreFindNoteCountsArgsClass NoteStoreFindNoteCountsArgsClass;

GType note_store_find_note_counts_args_get_type (void);
#define TYPE_NOTE_STORE_FIND_NOTE_COUNTS_ARGS (note_store_find_note_counts_args_get_type())
#define NOTE_STORE_FIND_NOTE_COUNTS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_FIND_NOTE_COUNTS_ARGS, NoteStoreFindNoteCountsArgs))
#define NOTE_STORE_FIND_NOTE_COUNTS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_FIND_NOTE_COUNTS_ARGS, NoteStoreFindNoteCountsArgsClass))
#define IS_NOTE_STORE_FIND_NOTE_COUNTS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_FIND_NOTE_COUNTS_ARGS))
#define IS_NOTE_STORE_FIND_NOTE_COUNTS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_FIND_NOTE_COUNTS_ARGS))
#define NOTE_STORE_FIND_NOTE_COUNTS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_FIND_NOTE_COUNTS_ARGS, NoteStoreFindNoteCountsArgsClass))

/* struct NoteStoreFindNoteCountsResult */
struct _NoteStoreFindNoteCountsResult
{ 
  ThriftStruct parent; 

  /* public */
  NoteCollectionCounts * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreFindNoteCountsResult NoteStoreFindNoteCountsResult;

struct _NoteStoreFindNoteCountsResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreFindNoteCountsResultClass NoteStoreFindNoteCountsResultClass;

GType note_store_find_note_counts_result_get_type (void);
#define TYPE_NOTE_STORE_FIND_NOTE_COUNTS_RESULT (note_store_find_note_counts_result_get_type())
#define NOTE_STORE_FIND_NOTE_COUNTS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_FIND_NOTE_COUNTS_RESULT, NoteStoreFindNoteCountsResult))
#define NOTE_STORE_FIND_NOTE_COUNTS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_FIND_NOTE_COUNTS_RESULT, NoteStoreFindNoteCountsResultClass))
#define IS_NOTE_STORE_FIND_NOTE_COUNTS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_FIND_NOTE_COUNTS_RESULT))
#define IS_NOTE_STORE_FIND_NOTE_COUNTS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_FIND_NOTE_COUNTS_RESULT))
#define NOTE_STORE_FIND_NOTE_COUNTS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_FIND_NOTE_COUNTS_RESULT, NoteStoreFindNoteCountsResultClass))

/* struct NoteStoreGetNoteWithResultSpecArgs */
struct _NoteStoreGetNoteWithResultSpecArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  NoteResultSpec * resultSpec;
  gboolean __isset_resultSpec;
};
typedef struct _NoteStoreGetNoteWithResultSpecArgs NoteStoreGetNoteWithResultSpecArgs;

struct _NoteStoreGetNoteWithResultSpecArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteWithResultSpecArgsClass NoteStoreGetNoteWithResultSpecArgsClass;

GType note_store_get_note_with_result_spec_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS (note_store_get_note_with_result_spec_args_get_type())
#define NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS, NoteStoreGetNoteWithResultSpecArgs))
#define NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS, NoteStoreGetNoteWithResultSpecArgsClass))
#define IS_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS))
#define IS_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS))
#define NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_ARGS, NoteStoreGetNoteWithResultSpecArgsClass))

/* struct NoteStoreGetNoteWithResultSpecResult */
struct _NoteStoreGetNoteWithResultSpecResult
{ 
  ThriftStruct parent; 

  /* public */
  Note * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNoteWithResultSpecResult NoteStoreGetNoteWithResultSpecResult;

struct _NoteStoreGetNoteWithResultSpecResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteWithResultSpecResultClass NoteStoreGetNoteWithResultSpecResultClass;

GType note_store_get_note_with_result_spec_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT (note_store_get_note_with_result_spec_result_get_type())
#define NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT, NoteStoreGetNoteWithResultSpecResult))
#define NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT, NoteStoreGetNoteWithResultSpecResultClass))
#define IS_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT))
#define IS_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT))
#define NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_WITH_RESULT_SPEC_RESULT, NoteStoreGetNoteWithResultSpecResultClass))

/* struct NoteStoreGetNoteArgs */
struct _NoteStoreGetNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gboolean withContent;
  gboolean __isset_withContent;
  gboolean withResourcesData;
  gboolean __isset_withResourcesData;
  gboolean withResourcesRecognition;
  gboolean __isset_withResourcesRecognition;
  gboolean withResourcesAlternateData;
  gboolean __isset_withResourcesAlternateData;
};
typedef struct _NoteStoreGetNoteArgs NoteStoreGetNoteArgs;

struct _NoteStoreGetNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteArgsClass NoteStoreGetNoteArgsClass;

GType note_store_get_note_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_ARGS (note_store_get_note_args_get_type())
#define NOTE_STORE_GET_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_ARGS, NoteStoreGetNoteArgs))
#define NOTE_STORE_GET_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_ARGS, NoteStoreGetNoteArgsClass))
#define IS_NOTE_STORE_GET_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_ARGS))
#define IS_NOTE_STORE_GET_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_ARGS))
#define NOTE_STORE_GET_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_ARGS, NoteStoreGetNoteArgsClass))

/* struct NoteStoreGetNoteResult */
struct _NoteStoreGetNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  Note * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNoteResult NoteStoreGetNoteResult;

struct _NoteStoreGetNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteResultClass NoteStoreGetNoteResultClass;

GType note_store_get_note_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_RESULT (note_store_get_note_result_get_type())
#define NOTE_STORE_GET_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_RESULT, NoteStoreGetNoteResult))
#define NOTE_STORE_GET_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_RESULT, NoteStoreGetNoteResultClass))
#define IS_NOTE_STORE_GET_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_RESULT))
#define IS_NOTE_STORE_GET_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_RESULT))
#define NOTE_STORE_GET_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_RESULT, NoteStoreGetNoteResultClass))

/* struct NoteStoreGetNoteApplicationDataArgs */
struct _NoteStoreGetNoteApplicationDataArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetNoteApplicationDataArgs NoteStoreGetNoteApplicationDataArgs;

struct _NoteStoreGetNoteApplicationDataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteApplicationDataArgsClass NoteStoreGetNoteApplicationDataArgsClass;

GType note_store_get_note_application_data_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS (note_store_get_note_application_data_args_get_type())
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS, NoteStoreGetNoteApplicationDataArgs))
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS, NoteStoreGetNoteApplicationDataArgsClass))
#define IS_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS))
#define IS_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS))
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ARGS, NoteStoreGetNoteApplicationDataArgsClass))

/* struct NoteStoreGetNoteApplicationDataResult */
struct _NoteStoreGetNoteApplicationDataResult
{ 
  ThriftStruct parent; 

  /* public */
  LazyMap * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNoteApplicationDataResult NoteStoreGetNoteApplicationDataResult;

struct _NoteStoreGetNoteApplicationDataResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteApplicationDataResultClass NoteStoreGetNoteApplicationDataResultClass;

GType note_store_get_note_application_data_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT (note_store_get_note_application_data_result_get_type())
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT, NoteStoreGetNoteApplicationDataResult))
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT, NoteStoreGetNoteApplicationDataResultClass))
#define IS_NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT))
#define IS_NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT))
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_RESULT, NoteStoreGetNoteApplicationDataResultClass))

/* struct NoteStoreGetNoteApplicationDataEntryArgs */
struct _NoteStoreGetNoteApplicationDataEntryArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gchar * key;
  gboolean __isset_key;
};
typedef struct _NoteStoreGetNoteApplicationDataEntryArgs NoteStoreGetNoteApplicationDataEntryArgs;

struct _NoteStoreGetNoteApplicationDataEntryArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteApplicationDataEntryArgsClass NoteStoreGetNoteApplicationDataEntryArgsClass;

GType note_store_get_note_application_data_entry_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS (note_store_get_note_application_data_entry_args_get_type())
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreGetNoteApplicationDataEntryArgs))
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreGetNoteApplicationDataEntryArgsClass))
#define IS_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS))
#define IS_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS))
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreGetNoteApplicationDataEntryArgsClass))

/* struct NoteStoreGetNoteApplicationDataEntryResult */
struct _NoteStoreGetNoteApplicationDataEntryResult
{ 
  ThriftStruct parent; 

  /* public */
  gchar * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNoteApplicationDataEntryResult NoteStoreGetNoteApplicationDataEntryResult;

struct _NoteStoreGetNoteApplicationDataEntryResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteApplicationDataEntryResultClass NoteStoreGetNoteApplicationDataEntryResultClass;

GType note_store_get_note_application_data_entry_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT (note_store_get_note_application_data_entry_result_get_type())
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreGetNoteApplicationDataEntryResult))
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreGetNoteApplicationDataEntryResultClass))
#define IS_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT))
#define IS_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT))
#define NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreGetNoteApplicationDataEntryResultClass))

/* struct NoteStoreSetNoteApplicationDataEntryArgs */
struct _NoteStoreSetNoteApplicationDataEntryArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gchar * key;
  gboolean __isset_key;
  gchar * value;
  gboolean __isset_value;
};
typedef struct _NoteStoreSetNoteApplicationDataEntryArgs NoteStoreSetNoteApplicationDataEntryArgs;

struct _NoteStoreSetNoteApplicationDataEntryArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreSetNoteApplicationDataEntryArgsClass NoteStoreSetNoteApplicationDataEntryArgsClass;

GType note_store_set_note_application_data_entry_args_get_type (void);
#define TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS (note_store_set_note_application_data_entry_args_get_type())
#define NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreSetNoteApplicationDataEntryArgs))
#define NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreSetNoteApplicationDataEntryArgsClass))
#define IS_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS))
#define IS_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS))
#define NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreSetNoteApplicationDataEntryArgsClass))

/* struct NoteStoreSetNoteApplicationDataEntryResult */
struct _NoteStoreSetNoteApplicationDataEntryResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreSetNoteApplicationDataEntryResult NoteStoreSetNoteApplicationDataEntryResult;

struct _NoteStoreSetNoteApplicationDataEntryResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreSetNoteApplicationDataEntryResultClass NoteStoreSetNoteApplicationDataEntryResultClass;

GType note_store_set_note_application_data_entry_result_get_type (void);
#define TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT (note_store_set_note_application_data_entry_result_get_type())
#define NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreSetNoteApplicationDataEntryResult))
#define NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreSetNoteApplicationDataEntryResultClass))
#define IS_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT))
#define IS_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT))
#define NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreSetNoteApplicationDataEntryResultClass))

/* struct NoteStoreUnsetNoteApplicationDataEntryArgs */
struct _NoteStoreUnsetNoteApplicationDataEntryArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gchar * key;
  gboolean __isset_key;
};
typedef struct _NoteStoreUnsetNoteApplicationDataEntryArgs NoteStoreUnsetNoteApplicationDataEntryArgs;

struct _NoteStoreUnsetNoteApplicationDataEntryArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUnsetNoteApplicationDataEntryArgsClass NoteStoreUnsetNoteApplicationDataEntryArgsClass;

GType note_store_unset_note_application_data_entry_args_get_type (void);
#define TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS (note_store_unset_note_application_data_entry_args_get_type())
#define NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreUnsetNoteApplicationDataEntryArgs))
#define NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreUnsetNoteApplicationDataEntryArgsClass))
#define IS_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS))
#define IS_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS))
#define NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreUnsetNoteApplicationDataEntryArgsClass))

/* struct NoteStoreUnsetNoteApplicationDataEntryResult */
struct _NoteStoreUnsetNoteApplicationDataEntryResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreUnsetNoteApplicationDataEntryResult NoteStoreUnsetNoteApplicationDataEntryResult;

struct _NoteStoreUnsetNoteApplicationDataEntryResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUnsetNoteApplicationDataEntryResultClass NoteStoreUnsetNoteApplicationDataEntryResultClass;

GType note_store_unset_note_application_data_entry_result_get_type (void);
#define TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT (note_store_unset_note_application_data_entry_result_get_type())
#define NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreUnsetNoteApplicationDataEntryResult))
#define NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreUnsetNoteApplicationDataEntryResultClass))
#define IS_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT))
#define IS_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT))
#define NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UNSET_NOTE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreUnsetNoteApplicationDataEntryResultClass))

/* struct NoteStoreGetNoteContentArgs */
struct _NoteStoreGetNoteContentArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetNoteContentArgs NoteStoreGetNoteContentArgs;

struct _NoteStoreGetNoteContentArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteContentArgsClass NoteStoreGetNoteContentArgsClass;

GType note_store_get_note_content_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_CONTENT_ARGS (note_store_get_note_content_args_get_type())
#define NOTE_STORE_GET_NOTE_CONTENT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_CONTENT_ARGS, NoteStoreGetNoteContentArgs))
#define NOTE_STORE_GET_NOTE_CONTENT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_CONTENT_ARGS, NoteStoreGetNoteContentArgsClass))
#define IS_NOTE_STORE_GET_NOTE_CONTENT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_CONTENT_ARGS))
#define IS_NOTE_STORE_GET_NOTE_CONTENT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_CONTENT_ARGS))
#define NOTE_STORE_GET_NOTE_CONTENT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_CONTENT_ARGS, NoteStoreGetNoteContentArgsClass))

/* struct NoteStoreGetNoteContentResult */
struct _NoteStoreGetNoteContentResult
{ 
  ThriftStruct parent; 

  /* public */
  gchar * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNoteContentResult NoteStoreGetNoteContentResult;

struct _NoteStoreGetNoteContentResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteContentResultClass NoteStoreGetNoteContentResultClass;

GType note_store_get_note_content_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_CONTENT_RESULT (note_store_get_note_content_result_get_type())
#define NOTE_STORE_GET_NOTE_CONTENT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_CONTENT_RESULT, NoteStoreGetNoteContentResult))
#define NOTE_STORE_GET_NOTE_CONTENT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_CONTENT_RESULT, NoteStoreGetNoteContentResultClass))
#define IS_NOTE_STORE_GET_NOTE_CONTENT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_CONTENT_RESULT))
#define IS_NOTE_STORE_GET_NOTE_CONTENT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_CONTENT_RESULT))
#define NOTE_STORE_GET_NOTE_CONTENT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_CONTENT_RESULT, NoteStoreGetNoteContentResultClass))

/* struct NoteStoreGetNoteSearchTextArgs */
struct _NoteStoreGetNoteSearchTextArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gboolean noteOnly;
  gboolean __isset_noteOnly;
  gboolean tokenizeForIndexing;
  gboolean __isset_tokenizeForIndexing;
};
typedef struct _NoteStoreGetNoteSearchTextArgs NoteStoreGetNoteSearchTextArgs;

struct _NoteStoreGetNoteSearchTextArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteSearchTextArgsClass NoteStoreGetNoteSearchTextArgsClass;

GType note_store_get_note_search_text_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS (note_store_get_note_search_text_args_get_type())
#define NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS, NoteStoreGetNoteSearchTextArgs))
#define NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS, NoteStoreGetNoteSearchTextArgsClass))
#define IS_NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS))
#define IS_NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS))
#define NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_ARGS, NoteStoreGetNoteSearchTextArgsClass))

/* struct NoteStoreGetNoteSearchTextResult */
struct _NoteStoreGetNoteSearchTextResult
{ 
  ThriftStruct parent; 

  /* public */
  gchar * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNoteSearchTextResult NoteStoreGetNoteSearchTextResult;

struct _NoteStoreGetNoteSearchTextResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteSearchTextResultClass NoteStoreGetNoteSearchTextResultClass;

GType note_store_get_note_search_text_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT (note_store_get_note_search_text_result_get_type())
#define NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT, NoteStoreGetNoteSearchTextResult))
#define NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT, NoteStoreGetNoteSearchTextResultClass))
#define IS_NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT))
#define IS_NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT))
#define NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_SEARCH_TEXT_RESULT, NoteStoreGetNoteSearchTextResultClass))

/* struct NoteStoreGetResourceSearchTextArgs */
struct _NoteStoreGetResourceSearchTextArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetResourceSearchTextArgs NoteStoreGetResourceSearchTextArgs;

struct _NoteStoreGetResourceSearchTextArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceSearchTextArgsClass NoteStoreGetResourceSearchTextArgsClass;

GType note_store_get_resource_search_text_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS (note_store_get_resource_search_text_args_get_type())
#define NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS, NoteStoreGetResourceSearchTextArgs))
#define NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS, NoteStoreGetResourceSearchTextArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS))
#define NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_ARGS, NoteStoreGetResourceSearchTextArgsClass))

/* struct NoteStoreGetResourceSearchTextResult */
struct _NoteStoreGetResourceSearchTextResult
{ 
  ThriftStruct parent; 

  /* public */
  gchar * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceSearchTextResult NoteStoreGetResourceSearchTextResult;

struct _NoteStoreGetResourceSearchTextResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceSearchTextResultClass NoteStoreGetResourceSearchTextResultClass;

GType note_store_get_resource_search_text_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT (note_store_get_resource_search_text_result_get_type())
#define NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT, NoteStoreGetResourceSearchTextResult))
#define NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT, NoteStoreGetResourceSearchTextResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT))
#define NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_SEARCH_TEXT_RESULT, NoteStoreGetResourceSearchTextResultClass))

/* struct NoteStoreGetNoteTagNamesArgs */
struct _NoteStoreGetNoteTagNamesArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetNoteTagNamesArgs NoteStoreGetNoteTagNamesArgs;

struct _NoteStoreGetNoteTagNamesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteTagNamesArgsClass NoteStoreGetNoteTagNamesArgsClass;

GType note_store_get_note_tag_names_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS (note_store_get_note_tag_names_args_get_type())
#define NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS, NoteStoreGetNoteTagNamesArgs))
#define NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS, NoteStoreGetNoteTagNamesArgsClass))
#define IS_NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS))
#define IS_NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS))
#define NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_ARGS, NoteStoreGetNoteTagNamesArgsClass))

/* struct NoteStoreGetNoteTagNamesResult */
struct _NoteStoreGetNoteTagNamesResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNoteTagNamesResult NoteStoreGetNoteTagNamesResult;

struct _NoteStoreGetNoteTagNamesResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteTagNamesResultClass NoteStoreGetNoteTagNamesResultClass;

GType note_store_get_note_tag_names_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT (note_store_get_note_tag_names_result_get_type())
#define NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT, NoteStoreGetNoteTagNamesResult))
#define NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT, NoteStoreGetNoteTagNamesResultClass))
#define IS_NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT))
#define IS_NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT))
#define NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_TAG_NAMES_RESULT, NoteStoreGetNoteTagNamesResultClass))

/* struct NoteStoreCreateNoteArgs */
struct _NoteStoreCreateNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  Note * note;
  gboolean __isset_note;
};
typedef struct _NoteStoreCreateNoteArgs NoteStoreCreateNoteArgs;

struct _NoteStoreCreateNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateNoteArgsClass NoteStoreCreateNoteArgsClass;

GType note_store_create_note_args_get_type (void);
#define TYPE_NOTE_STORE_CREATE_NOTE_ARGS (note_store_create_note_args_get_type())
#define NOTE_STORE_CREATE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_NOTE_ARGS, NoteStoreCreateNoteArgs))
#define NOTE_STORE_CREATE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_NOTE_ARGS, NoteStoreCreateNoteArgsClass))
#define IS_NOTE_STORE_CREATE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_NOTE_ARGS))
#define IS_NOTE_STORE_CREATE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_NOTE_ARGS))
#define NOTE_STORE_CREATE_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_NOTE_ARGS, NoteStoreCreateNoteArgsClass))

/* struct NoteStoreCreateNoteResult */
struct _NoteStoreCreateNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  Note * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreCreateNoteResult NoteStoreCreateNoteResult;

struct _NoteStoreCreateNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateNoteResultClass NoteStoreCreateNoteResultClass;

GType note_store_create_note_result_get_type (void);
#define TYPE_NOTE_STORE_CREATE_NOTE_RESULT (note_store_create_note_result_get_type())
#define NOTE_STORE_CREATE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_NOTE_RESULT, NoteStoreCreateNoteResult))
#define NOTE_STORE_CREATE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_NOTE_RESULT, NoteStoreCreateNoteResultClass))
#define IS_NOTE_STORE_CREATE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_NOTE_RESULT))
#define IS_NOTE_STORE_CREATE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_NOTE_RESULT))
#define NOTE_STORE_CREATE_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_NOTE_RESULT, NoteStoreCreateNoteResultClass))

/* struct NoteStoreUpdateNoteArgs */
struct _NoteStoreUpdateNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  Note * note;
  gboolean __isset_note;
};
typedef struct _NoteStoreUpdateNoteArgs NoteStoreUpdateNoteArgs;

struct _NoteStoreUpdateNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateNoteArgsClass NoteStoreUpdateNoteArgsClass;

GType note_store_update_note_args_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_NOTE_ARGS (note_store_update_note_args_get_type())
#define NOTE_STORE_UPDATE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_ARGS, NoteStoreUpdateNoteArgs))
#define NOTE_STORE_UPDATE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_NOTE_ARGS, NoteStoreUpdateNoteArgsClass))
#define IS_NOTE_STORE_UPDATE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_ARGS))
#define IS_NOTE_STORE_UPDATE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_NOTE_ARGS))
#define NOTE_STORE_UPDATE_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_ARGS, NoteStoreUpdateNoteArgsClass))

/* struct NoteStoreUpdateNoteResult */
struct _NoteStoreUpdateNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  Note * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreUpdateNoteResult NoteStoreUpdateNoteResult;

struct _NoteStoreUpdateNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateNoteResultClass NoteStoreUpdateNoteResultClass;

GType note_store_update_note_result_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_NOTE_RESULT (note_store_update_note_result_get_type())
#define NOTE_STORE_UPDATE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_RESULT, NoteStoreUpdateNoteResult))
#define NOTE_STORE_UPDATE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_NOTE_RESULT, NoteStoreUpdateNoteResultClass))
#define IS_NOTE_STORE_UPDATE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_RESULT))
#define IS_NOTE_STORE_UPDATE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_NOTE_RESULT))
#define NOTE_STORE_UPDATE_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_RESULT, NoteStoreUpdateNoteResultClass))

/* struct NoteStoreDeleteNoteArgs */
struct _NoteStoreDeleteNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreDeleteNoteArgs NoteStoreDeleteNoteArgs;

struct _NoteStoreDeleteNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreDeleteNoteArgsClass NoteStoreDeleteNoteArgsClass;

GType note_store_delete_note_args_get_type (void);
#define TYPE_NOTE_STORE_DELETE_NOTE_ARGS (note_store_delete_note_args_get_type())
#define NOTE_STORE_DELETE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_DELETE_NOTE_ARGS, NoteStoreDeleteNoteArgs))
#define NOTE_STORE_DELETE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_DELETE_NOTE_ARGS, NoteStoreDeleteNoteArgsClass))
#define IS_NOTE_STORE_DELETE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_DELETE_NOTE_ARGS))
#define IS_NOTE_STORE_DELETE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_DELETE_NOTE_ARGS))
#define NOTE_STORE_DELETE_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_DELETE_NOTE_ARGS, NoteStoreDeleteNoteArgsClass))

/* struct NoteStoreDeleteNoteResult */
struct _NoteStoreDeleteNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreDeleteNoteResult NoteStoreDeleteNoteResult;

struct _NoteStoreDeleteNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreDeleteNoteResultClass NoteStoreDeleteNoteResultClass;

GType note_store_delete_note_result_get_type (void);
#define TYPE_NOTE_STORE_DELETE_NOTE_RESULT (note_store_delete_note_result_get_type())
#define NOTE_STORE_DELETE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_DELETE_NOTE_RESULT, NoteStoreDeleteNoteResult))
#define NOTE_STORE_DELETE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_DELETE_NOTE_RESULT, NoteStoreDeleteNoteResultClass))
#define IS_NOTE_STORE_DELETE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_DELETE_NOTE_RESULT))
#define IS_NOTE_STORE_DELETE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_DELETE_NOTE_RESULT))
#define NOTE_STORE_DELETE_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_DELETE_NOTE_RESULT, NoteStoreDeleteNoteResultClass))

/* struct NoteStoreExpungeNoteArgs */
struct _NoteStoreExpungeNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreExpungeNoteArgs NoteStoreExpungeNoteArgs;

struct _NoteStoreExpungeNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeNoteArgsClass NoteStoreExpungeNoteArgsClass;

GType note_store_expunge_note_args_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_NOTE_ARGS (note_store_expunge_note_args_get_type())
#define NOTE_STORE_EXPUNGE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTE_ARGS, NoteStoreExpungeNoteArgs))
#define NOTE_STORE_EXPUNGE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_NOTE_ARGS, NoteStoreExpungeNoteArgsClass))
#define IS_NOTE_STORE_EXPUNGE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTE_ARGS))
#define IS_NOTE_STORE_EXPUNGE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_NOTE_ARGS))
#define NOTE_STORE_EXPUNGE_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTE_ARGS, NoteStoreExpungeNoteArgsClass))

/* struct NoteStoreExpungeNoteResult */
struct _NoteStoreExpungeNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreExpungeNoteResult NoteStoreExpungeNoteResult;

struct _NoteStoreExpungeNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeNoteResultClass NoteStoreExpungeNoteResultClass;

GType note_store_expunge_note_result_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_NOTE_RESULT (note_store_expunge_note_result_get_type())
#define NOTE_STORE_EXPUNGE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTE_RESULT, NoteStoreExpungeNoteResult))
#define NOTE_STORE_EXPUNGE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_NOTE_RESULT, NoteStoreExpungeNoteResultClass))
#define IS_NOTE_STORE_EXPUNGE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTE_RESULT))
#define IS_NOTE_STORE_EXPUNGE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_NOTE_RESULT))
#define NOTE_STORE_EXPUNGE_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_NOTE_RESULT, NoteStoreExpungeNoteResultClass))

/* struct NoteStoreCopyNoteArgs */
struct _NoteStoreCopyNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * noteGuid;
  gboolean __isset_noteGuid;
  gchar * toNotebookGuid;
  gboolean __isset_toNotebookGuid;
};
typedef struct _NoteStoreCopyNoteArgs NoteStoreCopyNoteArgs;

struct _NoteStoreCopyNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCopyNoteArgsClass NoteStoreCopyNoteArgsClass;

GType note_store_copy_note_args_get_type (void);
#define TYPE_NOTE_STORE_COPY_NOTE_ARGS (note_store_copy_note_args_get_type())
#define NOTE_STORE_COPY_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_COPY_NOTE_ARGS, NoteStoreCopyNoteArgs))
#define NOTE_STORE_COPY_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_COPY_NOTE_ARGS, NoteStoreCopyNoteArgsClass))
#define IS_NOTE_STORE_COPY_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_COPY_NOTE_ARGS))
#define IS_NOTE_STORE_COPY_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_COPY_NOTE_ARGS))
#define NOTE_STORE_COPY_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_COPY_NOTE_ARGS, NoteStoreCopyNoteArgsClass))

/* struct NoteStoreCopyNoteResult */
struct _NoteStoreCopyNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  Note * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreCopyNoteResult NoteStoreCopyNoteResult;

struct _NoteStoreCopyNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCopyNoteResultClass NoteStoreCopyNoteResultClass;

GType note_store_copy_note_result_get_type (void);
#define TYPE_NOTE_STORE_COPY_NOTE_RESULT (note_store_copy_note_result_get_type())
#define NOTE_STORE_COPY_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_COPY_NOTE_RESULT, NoteStoreCopyNoteResult))
#define NOTE_STORE_COPY_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_COPY_NOTE_RESULT, NoteStoreCopyNoteResultClass))
#define IS_NOTE_STORE_COPY_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_COPY_NOTE_RESULT))
#define IS_NOTE_STORE_COPY_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_COPY_NOTE_RESULT))
#define NOTE_STORE_COPY_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_COPY_NOTE_RESULT, NoteStoreCopyNoteResultClass))

/* struct NoteStoreListNoteVersionsArgs */
struct _NoteStoreListNoteVersionsArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * noteGuid;
  gboolean __isset_noteGuid;
};
typedef struct _NoteStoreListNoteVersionsArgs NoteStoreListNoteVersionsArgs;

struct _NoteStoreListNoteVersionsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListNoteVersionsArgsClass NoteStoreListNoteVersionsArgsClass;

GType note_store_list_note_versions_args_get_type (void);
#define TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_ARGS (note_store_list_note_versions_args_get_type())
#define NOTE_STORE_LIST_NOTE_VERSIONS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_ARGS, NoteStoreListNoteVersionsArgs))
#define NOTE_STORE_LIST_NOTE_VERSIONS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_ARGS, NoteStoreListNoteVersionsArgsClass))
#define IS_NOTE_STORE_LIST_NOTE_VERSIONS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_ARGS))
#define IS_NOTE_STORE_LIST_NOTE_VERSIONS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_ARGS))
#define NOTE_STORE_LIST_NOTE_VERSIONS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_ARGS, NoteStoreListNoteVersionsArgsClass))

/* struct NoteStoreListNoteVersionsResult */
struct _NoteStoreListNoteVersionsResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreListNoteVersionsResult NoteStoreListNoteVersionsResult;

struct _NoteStoreListNoteVersionsResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListNoteVersionsResultClass NoteStoreListNoteVersionsResultClass;

GType note_store_list_note_versions_result_get_type (void);
#define TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_RESULT (note_store_list_note_versions_result_get_type())
#define NOTE_STORE_LIST_NOTE_VERSIONS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_RESULT, NoteStoreListNoteVersionsResult))
#define NOTE_STORE_LIST_NOTE_VERSIONS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_RESULT, NoteStoreListNoteVersionsResultClass))
#define IS_NOTE_STORE_LIST_NOTE_VERSIONS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_RESULT))
#define IS_NOTE_STORE_LIST_NOTE_VERSIONS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_RESULT))
#define NOTE_STORE_LIST_NOTE_VERSIONS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_NOTE_VERSIONS_RESULT, NoteStoreListNoteVersionsResultClass))

/* struct NoteStoreGetNoteVersionArgs */
struct _NoteStoreGetNoteVersionArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * noteGuid;
  gboolean __isset_noteGuid;
  gint32 updateSequenceNum;
  gboolean __isset_updateSequenceNum;
  gboolean withResourcesData;
  gboolean __isset_withResourcesData;
  gboolean withResourcesRecognition;
  gboolean __isset_withResourcesRecognition;
  gboolean withResourcesAlternateData;
  gboolean __isset_withResourcesAlternateData;
};
typedef struct _NoteStoreGetNoteVersionArgs NoteStoreGetNoteVersionArgs;

struct _NoteStoreGetNoteVersionArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteVersionArgsClass NoteStoreGetNoteVersionArgsClass;

GType note_store_get_note_version_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_VERSION_ARGS (note_store_get_note_version_args_get_type())
#define NOTE_STORE_GET_NOTE_VERSION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_VERSION_ARGS, NoteStoreGetNoteVersionArgs))
#define NOTE_STORE_GET_NOTE_VERSION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_VERSION_ARGS, NoteStoreGetNoteVersionArgsClass))
#define IS_NOTE_STORE_GET_NOTE_VERSION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_VERSION_ARGS))
#define IS_NOTE_STORE_GET_NOTE_VERSION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_VERSION_ARGS))
#define NOTE_STORE_GET_NOTE_VERSION_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_VERSION_ARGS, NoteStoreGetNoteVersionArgsClass))

/* struct NoteStoreGetNoteVersionResult */
struct _NoteStoreGetNoteVersionResult
{ 
  ThriftStruct parent; 

  /* public */
  Note * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetNoteVersionResult NoteStoreGetNoteVersionResult;

struct _NoteStoreGetNoteVersionResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNoteVersionResultClass NoteStoreGetNoteVersionResultClass;

GType note_store_get_note_version_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTE_VERSION_RESULT (note_store_get_note_version_result_get_type())
#define NOTE_STORE_GET_NOTE_VERSION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTE_VERSION_RESULT, NoteStoreGetNoteVersionResult))
#define NOTE_STORE_GET_NOTE_VERSION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTE_VERSION_RESULT, NoteStoreGetNoteVersionResultClass))
#define IS_NOTE_STORE_GET_NOTE_VERSION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTE_VERSION_RESULT))
#define IS_NOTE_STORE_GET_NOTE_VERSION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTE_VERSION_RESULT))
#define NOTE_STORE_GET_NOTE_VERSION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTE_VERSION_RESULT, NoteStoreGetNoteVersionResultClass))

/* struct NoteStoreGetResourceArgs */
struct _NoteStoreGetResourceArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gboolean withData;
  gboolean __isset_withData;
  gboolean withRecognition;
  gboolean __isset_withRecognition;
  gboolean withAttributes;
  gboolean __isset_withAttributes;
  gboolean withAlternateData;
  gboolean __isset_withAlternateData;
};
typedef struct _NoteStoreGetResourceArgs NoteStoreGetResourceArgs;

struct _NoteStoreGetResourceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceArgsClass NoteStoreGetResourceArgsClass;

GType note_store_get_resource_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_ARGS (note_store_get_resource_args_get_type())
#define NOTE_STORE_GET_RESOURCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ARGS, NoteStoreGetResourceArgs))
#define NOTE_STORE_GET_RESOURCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_ARGS, NoteStoreGetResourceArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_ARGS))
#define NOTE_STORE_GET_RESOURCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ARGS, NoteStoreGetResourceArgsClass))

/* struct NoteStoreGetResourceResult */
struct _NoteStoreGetResourceResult
{ 
  ThriftStruct parent; 

  /* public */
  Resource * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceResult NoteStoreGetResourceResult;

struct _NoteStoreGetResourceResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceResultClass NoteStoreGetResourceResultClass;

GType note_store_get_resource_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_RESULT (note_store_get_resource_result_get_type())
#define NOTE_STORE_GET_RESOURCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RESULT, NoteStoreGetResourceResult))
#define NOTE_STORE_GET_RESOURCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_RESULT, NoteStoreGetResourceResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_RESULT))
#define NOTE_STORE_GET_RESOURCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RESULT, NoteStoreGetResourceResultClass))

/* struct NoteStoreGetResourceApplicationDataArgs */
struct _NoteStoreGetResourceApplicationDataArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetResourceApplicationDataArgs NoteStoreGetResourceApplicationDataArgs;

struct _NoteStoreGetResourceApplicationDataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceApplicationDataArgsClass NoteStoreGetResourceApplicationDataArgsClass;

GType note_store_get_resource_application_data_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS (note_store_get_resource_application_data_args_get_type())
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS, NoteStoreGetResourceApplicationDataArgs))
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS, NoteStoreGetResourceApplicationDataArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS))
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ARGS, NoteStoreGetResourceApplicationDataArgsClass))

/* struct NoteStoreGetResourceApplicationDataResult */
struct _NoteStoreGetResourceApplicationDataResult
{ 
  ThriftStruct parent; 

  /* public */
  LazyMap * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceApplicationDataResult NoteStoreGetResourceApplicationDataResult;

struct _NoteStoreGetResourceApplicationDataResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceApplicationDataResultClass NoteStoreGetResourceApplicationDataResultClass;

GType note_store_get_resource_application_data_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT (note_store_get_resource_application_data_result_get_type())
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT, NoteStoreGetResourceApplicationDataResult))
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT, NoteStoreGetResourceApplicationDataResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT))
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_RESULT, NoteStoreGetResourceApplicationDataResultClass))

/* struct NoteStoreGetResourceApplicationDataEntryArgs */
struct _NoteStoreGetResourceApplicationDataEntryArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gchar * key;
  gboolean __isset_key;
};
typedef struct _NoteStoreGetResourceApplicationDataEntryArgs NoteStoreGetResourceApplicationDataEntryArgs;

struct _NoteStoreGetResourceApplicationDataEntryArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceApplicationDataEntryArgsClass NoteStoreGetResourceApplicationDataEntryArgsClass;

GType note_store_get_resource_application_data_entry_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS (note_store_get_resource_application_data_entry_args_get_type())
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreGetResourceApplicationDataEntryArgs))
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreGetResourceApplicationDataEntryArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS))
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreGetResourceApplicationDataEntryArgsClass))

/* struct NoteStoreGetResourceApplicationDataEntryResult */
struct _NoteStoreGetResourceApplicationDataEntryResult
{ 
  ThriftStruct parent; 

  /* public */
  gchar * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceApplicationDataEntryResult NoteStoreGetResourceApplicationDataEntryResult;

struct _NoteStoreGetResourceApplicationDataEntryResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceApplicationDataEntryResultClass NoteStoreGetResourceApplicationDataEntryResultClass;

GType note_store_get_resource_application_data_entry_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT (note_store_get_resource_application_data_entry_result_get_type())
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreGetResourceApplicationDataEntryResult))
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreGetResourceApplicationDataEntryResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT))
#define NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreGetResourceApplicationDataEntryResultClass))

/* struct NoteStoreSetResourceApplicationDataEntryArgs */
struct _NoteStoreSetResourceApplicationDataEntryArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gchar * key;
  gboolean __isset_key;
  gchar * value;
  gboolean __isset_value;
};
typedef struct _NoteStoreSetResourceApplicationDataEntryArgs NoteStoreSetResourceApplicationDataEntryArgs;

struct _NoteStoreSetResourceApplicationDataEntryArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreSetResourceApplicationDataEntryArgsClass NoteStoreSetResourceApplicationDataEntryArgsClass;

GType note_store_set_resource_application_data_entry_args_get_type (void);
#define TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS (note_store_set_resource_application_data_entry_args_get_type())
#define NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreSetResourceApplicationDataEntryArgs))
#define NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreSetResourceApplicationDataEntryArgsClass))
#define IS_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS))
#define IS_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS))
#define NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreSetResourceApplicationDataEntryArgsClass))

/* struct NoteStoreSetResourceApplicationDataEntryResult */
struct _NoteStoreSetResourceApplicationDataEntryResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreSetResourceApplicationDataEntryResult NoteStoreSetResourceApplicationDataEntryResult;

struct _NoteStoreSetResourceApplicationDataEntryResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreSetResourceApplicationDataEntryResultClass NoteStoreSetResourceApplicationDataEntryResultClass;

GType note_store_set_resource_application_data_entry_result_get_type (void);
#define TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT (note_store_set_resource_application_data_entry_result_get_type())
#define NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreSetResourceApplicationDataEntryResult))
#define NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreSetResourceApplicationDataEntryResultClass))
#define IS_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT))
#define IS_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT))
#define NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreSetResourceApplicationDataEntryResultClass))

/* struct NoteStoreUnsetResourceApplicationDataEntryArgs */
struct _NoteStoreUnsetResourceApplicationDataEntryArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
  gchar * key;
  gboolean __isset_key;
};
typedef struct _NoteStoreUnsetResourceApplicationDataEntryArgs NoteStoreUnsetResourceApplicationDataEntryArgs;

struct _NoteStoreUnsetResourceApplicationDataEntryArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUnsetResourceApplicationDataEntryArgsClass NoteStoreUnsetResourceApplicationDataEntryArgsClass;

GType note_store_unset_resource_application_data_entry_args_get_type (void);
#define TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS (note_store_unset_resource_application_data_entry_args_get_type())
#define NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreUnsetResourceApplicationDataEntryArgs))
#define NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreUnsetResourceApplicationDataEntryArgsClass))
#define IS_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS))
#define IS_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS))
#define NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_ARGS, NoteStoreUnsetResourceApplicationDataEntryArgsClass))

/* struct NoteStoreUnsetResourceApplicationDataEntryResult */
struct _NoteStoreUnsetResourceApplicationDataEntryResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreUnsetResourceApplicationDataEntryResult NoteStoreUnsetResourceApplicationDataEntryResult;

struct _NoteStoreUnsetResourceApplicationDataEntryResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUnsetResourceApplicationDataEntryResultClass NoteStoreUnsetResourceApplicationDataEntryResultClass;

GType note_store_unset_resource_application_data_entry_result_get_type (void);
#define TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT (note_store_unset_resource_application_data_entry_result_get_type())
#define NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreUnsetResourceApplicationDataEntryResult))
#define NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreUnsetResourceApplicationDataEntryResultClass))
#define IS_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT))
#define IS_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT))
#define NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UNSET_RESOURCE_APPLICATION_DATA_ENTRY_RESULT, NoteStoreUnsetResourceApplicationDataEntryResultClass))

/* struct NoteStoreUpdateResourceArgs */
struct _NoteStoreUpdateResourceArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  Resource * resource;
  gboolean __isset_resource;
};
typedef struct _NoteStoreUpdateResourceArgs NoteStoreUpdateResourceArgs;

struct _NoteStoreUpdateResourceArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateResourceArgsClass NoteStoreUpdateResourceArgsClass;

GType note_store_update_resource_args_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_RESOURCE_ARGS (note_store_update_resource_args_get_type())
#define NOTE_STORE_UPDATE_RESOURCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_RESOURCE_ARGS, NoteStoreUpdateResourceArgs))
#define NOTE_STORE_UPDATE_RESOURCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_RESOURCE_ARGS, NoteStoreUpdateResourceArgsClass))
#define IS_NOTE_STORE_UPDATE_RESOURCE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_RESOURCE_ARGS))
#define IS_NOTE_STORE_UPDATE_RESOURCE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_RESOURCE_ARGS))
#define NOTE_STORE_UPDATE_RESOURCE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_RESOURCE_ARGS, NoteStoreUpdateResourceArgsClass))

/* struct NoteStoreUpdateResourceResult */
struct _NoteStoreUpdateResourceResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreUpdateResourceResult NoteStoreUpdateResourceResult;

struct _NoteStoreUpdateResourceResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateResourceResultClass NoteStoreUpdateResourceResultClass;

GType note_store_update_resource_result_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_RESOURCE_RESULT (note_store_update_resource_result_get_type())
#define NOTE_STORE_UPDATE_RESOURCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_RESOURCE_RESULT, NoteStoreUpdateResourceResult))
#define NOTE_STORE_UPDATE_RESOURCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_RESOURCE_RESULT, NoteStoreUpdateResourceResultClass))
#define IS_NOTE_STORE_UPDATE_RESOURCE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_RESOURCE_RESULT))
#define IS_NOTE_STORE_UPDATE_RESOURCE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_RESOURCE_RESULT))
#define NOTE_STORE_UPDATE_RESOURCE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_RESOURCE_RESULT, NoteStoreUpdateResourceResultClass))

/* struct NoteStoreGetResourceDataArgs */
struct _NoteStoreGetResourceDataArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetResourceDataArgs NoteStoreGetResourceDataArgs;

struct _NoteStoreGetResourceDataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceDataArgsClass NoteStoreGetResourceDataArgsClass;

GType note_store_get_resource_data_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_DATA_ARGS (note_store_get_resource_data_args_get_type())
#define NOTE_STORE_GET_RESOURCE_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_DATA_ARGS, NoteStoreGetResourceDataArgs))
#define NOTE_STORE_GET_RESOURCE_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_DATA_ARGS, NoteStoreGetResourceDataArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_DATA_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_DATA_ARGS))
#define NOTE_STORE_GET_RESOURCE_DATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_DATA_ARGS, NoteStoreGetResourceDataArgsClass))

/* struct NoteStoreGetResourceDataResult */
struct _NoteStoreGetResourceDataResult
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceDataResult NoteStoreGetResourceDataResult;

struct _NoteStoreGetResourceDataResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceDataResultClass NoteStoreGetResourceDataResultClass;

GType note_store_get_resource_data_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_DATA_RESULT (note_store_get_resource_data_result_get_type())
#define NOTE_STORE_GET_RESOURCE_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_DATA_RESULT, NoteStoreGetResourceDataResult))
#define NOTE_STORE_GET_RESOURCE_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_DATA_RESULT, NoteStoreGetResourceDataResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_DATA_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_DATA_RESULT))
#define NOTE_STORE_GET_RESOURCE_DATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_DATA_RESULT, NoteStoreGetResourceDataResultClass))

/* struct NoteStoreGetResourceByHashArgs */
struct _NoteStoreGetResourceByHashArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * noteGuid;
  gboolean __isset_noteGuid;
  GByteArray * contentHash;
  gboolean __isset_contentHash;
  gboolean withData;
  gboolean __isset_withData;
  gboolean withRecognition;
  gboolean __isset_withRecognition;
  gboolean withAlternateData;
  gboolean __isset_withAlternateData;
};
typedef struct _NoteStoreGetResourceByHashArgs NoteStoreGetResourceByHashArgs;

struct _NoteStoreGetResourceByHashArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceByHashArgsClass NoteStoreGetResourceByHashArgsClass;

GType note_store_get_resource_by_hash_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS (note_store_get_resource_by_hash_args_get_type())
#define NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS, NoteStoreGetResourceByHashArgs))
#define NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS, NoteStoreGetResourceByHashArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS))
#define NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_ARGS, NoteStoreGetResourceByHashArgsClass))

/* struct NoteStoreGetResourceByHashResult */
struct _NoteStoreGetResourceByHashResult
{ 
  ThriftStruct parent; 

  /* public */
  Resource * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceByHashResult NoteStoreGetResourceByHashResult;

struct _NoteStoreGetResourceByHashResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceByHashResultClass NoteStoreGetResourceByHashResultClass;

GType note_store_get_resource_by_hash_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT (note_store_get_resource_by_hash_result_get_type())
#define NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT, NoteStoreGetResourceByHashResult))
#define NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT, NoteStoreGetResourceByHashResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT))
#define NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_BY_HASH_RESULT, NoteStoreGetResourceByHashResultClass))

/* struct NoteStoreGetResourceRecognitionArgs */
struct _NoteStoreGetResourceRecognitionArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetResourceRecognitionArgs NoteStoreGetResourceRecognitionArgs;

struct _NoteStoreGetResourceRecognitionArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceRecognitionArgsClass NoteStoreGetResourceRecognitionArgsClass;

GType note_store_get_resource_recognition_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS (note_store_get_resource_recognition_args_get_type())
#define NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS, NoteStoreGetResourceRecognitionArgs))
#define NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS, NoteStoreGetResourceRecognitionArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS))
#define NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_ARGS, NoteStoreGetResourceRecognitionArgsClass))

/* struct NoteStoreGetResourceRecognitionResult */
struct _NoteStoreGetResourceRecognitionResult
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceRecognitionResult NoteStoreGetResourceRecognitionResult;

struct _NoteStoreGetResourceRecognitionResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceRecognitionResultClass NoteStoreGetResourceRecognitionResultClass;

GType note_store_get_resource_recognition_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT (note_store_get_resource_recognition_result_get_type())
#define NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT, NoteStoreGetResourceRecognitionResult))
#define NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT, NoteStoreGetResourceRecognitionResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT))
#define NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_RECOGNITION_RESULT, NoteStoreGetResourceRecognitionResultClass))

/* struct NoteStoreGetResourceAlternateDataArgs */
struct _NoteStoreGetResourceAlternateDataArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetResourceAlternateDataArgs NoteStoreGetResourceAlternateDataArgs;

struct _NoteStoreGetResourceAlternateDataArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceAlternateDataArgsClass NoteStoreGetResourceAlternateDataArgsClass;

GType note_store_get_resource_alternate_data_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS (note_store_get_resource_alternate_data_args_get_type())
#define NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS, NoteStoreGetResourceAlternateDataArgs))
#define NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS, NoteStoreGetResourceAlternateDataArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS))
#define NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_ARGS, NoteStoreGetResourceAlternateDataArgsClass))

/* struct NoteStoreGetResourceAlternateDataResult */
struct _NoteStoreGetResourceAlternateDataResult
{ 
  ThriftStruct parent; 

  /* public */
  GByteArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceAlternateDataResult NoteStoreGetResourceAlternateDataResult;

struct _NoteStoreGetResourceAlternateDataResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceAlternateDataResultClass NoteStoreGetResourceAlternateDataResultClass;

GType note_store_get_resource_alternate_data_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT (note_store_get_resource_alternate_data_result_get_type())
#define NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT, NoteStoreGetResourceAlternateDataResult))
#define NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT, NoteStoreGetResourceAlternateDataResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT))
#define NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ALTERNATE_DATA_RESULT, NoteStoreGetResourceAlternateDataResultClass))

/* struct NoteStoreGetResourceAttributesArgs */
struct _NoteStoreGetResourceAttributesArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreGetResourceAttributesArgs NoteStoreGetResourceAttributesArgs;

struct _NoteStoreGetResourceAttributesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceAttributesArgsClass NoteStoreGetResourceAttributesArgsClass;

GType note_store_get_resource_attributes_args_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS (note_store_get_resource_attributes_args_get_type())
#define NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS, NoteStoreGetResourceAttributesArgs))
#define NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS, NoteStoreGetResourceAttributesArgsClass))
#define IS_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS))
#define IS_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS))
#define NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_ARGS, NoteStoreGetResourceAttributesArgsClass))

/* struct NoteStoreGetResourceAttributesResult */
struct _NoteStoreGetResourceAttributesResult
{ 
  ThriftStruct parent; 

  /* public */
  ResourceAttributes * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetResourceAttributesResult NoteStoreGetResourceAttributesResult;

struct _NoteStoreGetResourceAttributesResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetResourceAttributesResultClass NoteStoreGetResourceAttributesResultClass;

GType note_store_get_resource_attributes_result_get_type (void);
#define TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT (note_store_get_resource_attributes_result_get_type())
#define NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT, NoteStoreGetResourceAttributesResult))
#define NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT, NoteStoreGetResourceAttributesResultClass))
#define IS_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT))
#define IS_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT))
#define NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_RESOURCE_ATTRIBUTES_RESULT, NoteStoreGetResourceAttributesResultClass))

/* struct NoteStoreGetPublicNotebookArgs */
struct _NoteStoreGetPublicNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gint32 userId;
  gboolean __isset_userId;
  gchar * publicUri;
  gboolean __isset_publicUri;
};
typedef struct _NoteStoreGetPublicNotebookArgs NoteStoreGetPublicNotebookArgs;

struct _NoteStoreGetPublicNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetPublicNotebookArgsClass NoteStoreGetPublicNotebookArgsClass;

GType note_store_get_public_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS (note_store_get_public_notebook_args_get_type())
#define NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS, NoteStoreGetPublicNotebookArgs))
#define NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS, NoteStoreGetPublicNotebookArgsClass))
#define IS_NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS))
#define NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_ARGS, NoteStoreGetPublicNotebookArgsClass))

/* struct NoteStoreGetPublicNotebookResult */
struct _NoteStoreGetPublicNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  Notebook * success;
  gboolean __isset_success;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreGetPublicNotebookResult NoteStoreGetPublicNotebookResult;

struct _NoteStoreGetPublicNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetPublicNotebookResultClass NoteStoreGetPublicNotebookResultClass;

GType note_store_get_public_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT (note_store_get_public_notebook_result_get_type())
#define NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT, NoteStoreGetPublicNotebookResult))
#define NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT, NoteStoreGetPublicNotebookResultClass))
#define IS_NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT))
#define NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_PUBLIC_NOTEBOOK_RESULT, NoteStoreGetPublicNotebookResultClass))

/* struct NoteStoreShareNotebookArgs */
struct _NoteStoreShareNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  SharedNotebook * sharedNotebook;
  gboolean __isset_sharedNotebook;
  gchar * message;
  gboolean __isset_message;
};
typedef struct _NoteStoreShareNotebookArgs NoteStoreShareNotebookArgs;

struct _NoteStoreShareNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreShareNotebookArgsClass NoteStoreShareNotebookArgsClass;

GType note_store_share_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_SHARE_NOTEBOOK_ARGS (note_store_share_notebook_args_get_type())
#define NOTE_STORE_SHARE_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SHARE_NOTEBOOK_ARGS, NoteStoreShareNotebookArgs))
#define NOTE_STORE_SHARE_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SHARE_NOTEBOOK_ARGS, NoteStoreShareNotebookArgsClass))
#define IS_NOTE_STORE_SHARE_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SHARE_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_SHARE_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SHARE_NOTEBOOK_ARGS))
#define NOTE_STORE_SHARE_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SHARE_NOTEBOOK_ARGS, NoteStoreShareNotebookArgsClass))

/* struct NoteStoreShareNotebookResult */
struct _NoteStoreShareNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  SharedNotebook * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreShareNotebookResult NoteStoreShareNotebookResult;

struct _NoteStoreShareNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreShareNotebookResultClass NoteStoreShareNotebookResultClass;

GType note_store_share_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_SHARE_NOTEBOOK_RESULT (note_store_share_notebook_result_get_type())
#define NOTE_STORE_SHARE_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SHARE_NOTEBOOK_RESULT, NoteStoreShareNotebookResult))
#define NOTE_STORE_SHARE_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SHARE_NOTEBOOK_RESULT, NoteStoreShareNotebookResultClass))
#define IS_NOTE_STORE_SHARE_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SHARE_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_SHARE_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SHARE_NOTEBOOK_RESULT))
#define NOTE_STORE_SHARE_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SHARE_NOTEBOOK_RESULT, NoteStoreShareNotebookResultClass))

/* struct NoteStoreCreateOrUpdateNotebookSharesArgs */
struct _NoteStoreCreateOrUpdateNotebookSharesArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  NotebookShareTemplate * shareTemplate;
  gboolean __isset_shareTemplate;
};
typedef struct _NoteStoreCreateOrUpdateNotebookSharesArgs NoteStoreCreateOrUpdateNotebookSharesArgs;

struct _NoteStoreCreateOrUpdateNotebookSharesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateOrUpdateNotebookSharesArgsClass NoteStoreCreateOrUpdateNotebookSharesArgsClass;

GType note_store_create_or_update_notebook_shares_args_get_type (void);
#define TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS (note_store_create_or_update_notebook_shares_args_get_type())
#define NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS, NoteStoreCreateOrUpdateNotebookSharesArgs))
#define NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS, NoteStoreCreateOrUpdateNotebookSharesArgsClass))
#define IS_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS))
#define IS_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS))
#define NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_ARGS, NoteStoreCreateOrUpdateNotebookSharesArgsClass))

/* struct NoteStoreCreateOrUpdateNotebookSharesResult */
struct _NoteStoreCreateOrUpdateNotebookSharesResult
{ 
  ThriftStruct parent; 

  /* public */
  CreateOrUpdateNotebookSharesResult * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMInvalidContactsException * invalidContactsException;
  gboolean __isset_invalidContactsException;
};
typedef struct _NoteStoreCreateOrUpdateNotebookSharesResult NoteStoreCreateOrUpdateNotebookSharesResult;

struct _NoteStoreCreateOrUpdateNotebookSharesResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateOrUpdateNotebookSharesResultClass NoteStoreCreateOrUpdateNotebookSharesResultClass;

GType note_store_create_or_update_notebook_shares_result_get_type (void);
#define TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT (note_store_create_or_update_notebook_shares_result_get_type())
#define NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT, NoteStoreCreateOrUpdateNotebookSharesResult))
#define NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT, NoteStoreCreateOrUpdateNotebookSharesResultClass))
#define IS_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT))
#define IS_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT))
#define NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_OR_UPDATE_NOTEBOOK_SHARES_RESULT, NoteStoreCreateOrUpdateNotebookSharesResultClass))

/* struct NoteStoreUpdateSharedNotebookArgs */
struct _NoteStoreUpdateSharedNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  SharedNotebook * sharedNotebook;
  gboolean __isset_sharedNotebook;
};
typedef struct _NoteStoreUpdateSharedNotebookArgs NoteStoreUpdateSharedNotebookArgs;

struct _NoteStoreUpdateSharedNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateSharedNotebookArgsClass NoteStoreUpdateSharedNotebookArgsClass;

GType note_store_update_shared_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS (note_store_update_shared_notebook_args_get_type())
#define NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS, NoteStoreUpdateSharedNotebookArgs))
#define NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS, NoteStoreUpdateSharedNotebookArgsClass))
#define IS_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS))
#define NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_ARGS, NoteStoreUpdateSharedNotebookArgsClass))

/* struct NoteStoreUpdateSharedNotebookResult */
struct _NoteStoreUpdateSharedNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreUpdateSharedNotebookResult NoteStoreUpdateSharedNotebookResult;

struct _NoteStoreUpdateSharedNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateSharedNotebookResultClass NoteStoreUpdateSharedNotebookResultClass;

GType note_store_update_shared_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT (note_store_update_shared_notebook_result_get_type())
#define NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT, NoteStoreUpdateSharedNotebookResult))
#define NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT, NoteStoreUpdateSharedNotebookResultClass))
#define IS_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT))
#define NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_SHARED_NOTEBOOK_RESULT, NoteStoreUpdateSharedNotebookResultClass))

/* struct NoteStoreSetNotebookRecipientSettingsArgs */
struct _NoteStoreSetNotebookRecipientSettingsArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * notebookGuid;
  gboolean __isset_notebookGuid;
  NotebookRecipientSettings * recipientSettings;
  gboolean __isset_recipientSettings;
};
typedef struct _NoteStoreSetNotebookRecipientSettingsArgs NoteStoreSetNotebookRecipientSettingsArgs;

struct _NoteStoreSetNotebookRecipientSettingsArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreSetNotebookRecipientSettingsArgsClass NoteStoreSetNotebookRecipientSettingsArgsClass;

GType note_store_set_notebook_recipient_settings_args_get_type (void);
#define TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS (note_store_set_notebook_recipient_settings_args_get_type())
#define NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS, NoteStoreSetNotebookRecipientSettingsArgs))
#define NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS, NoteStoreSetNotebookRecipientSettingsArgsClass))
#define IS_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS))
#define IS_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS))
#define NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_ARGS, NoteStoreSetNotebookRecipientSettingsArgsClass))

/* struct NoteStoreSetNotebookRecipientSettingsResult */
struct _NoteStoreSetNotebookRecipientSettingsResult
{ 
  ThriftStruct parent; 

  /* public */
  Notebook * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreSetNotebookRecipientSettingsResult NoteStoreSetNotebookRecipientSettingsResult;

struct _NoteStoreSetNotebookRecipientSettingsResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreSetNotebookRecipientSettingsResultClass NoteStoreSetNotebookRecipientSettingsResultClass;

GType note_store_set_notebook_recipient_settings_result_get_type (void);
#define TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT (note_store_set_notebook_recipient_settings_result_get_type())
#define NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT, NoteStoreSetNotebookRecipientSettingsResult))
#define NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT, NoteStoreSetNotebookRecipientSettingsResultClass))
#define IS_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT))
#define IS_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT))
#define NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SET_NOTEBOOK_RECIPIENT_SETTINGS_RESULT, NoteStoreSetNotebookRecipientSettingsResultClass))

/* struct NoteStoreListSharedNotebooksArgs */
struct _NoteStoreListSharedNotebooksArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreListSharedNotebooksArgs NoteStoreListSharedNotebooksArgs;

struct _NoteStoreListSharedNotebooksArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListSharedNotebooksArgsClass NoteStoreListSharedNotebooksArgsClass;

GType note_store_list_shared_notebooks_args_get_type (void);
#define TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS (note_store_list_shared_notebooks_args_get_type())
#define NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS, NoteStoreListSharedNotebooksArgs))
#define NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS, NoteStoreListSharedNotebooksArgsClass))
#define IS_NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS))
#define IS_NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS))
#define NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_ARGS, NoteStoreListSharedNotebooksArgsClass))

/* struct NoteStoreListSharedNotebooksResult */
struct _NoteStoreListSharedNotebooksResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreListSharedNotebooksResult NoteStoreListSharedNotebooksResult;

struct _NoteStoreListSharedNotebooksResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListSharedNotebooksResultClass NoteStoreListSharedNotebooksResultClass;

GType note_store_list_shared_notebooks_result_get_type (void);
#define TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT (note_store_list_shared_notebooks_result_get_type())
#define NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT, NoteStoreListSharedNotebooksResult))
#define NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT, NoteStoreListSharedNotebooksResultClass))
#define IS_NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT))
#define IS_NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT))
#define NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_SHARED_NOTEBOOKS_RESULT, NoteStoreListSharedNotebooksResultClass))

/* struct NoteStoreCreateLinkedNotebookArgs */
struct _NoteStoreCreateLinkedNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  LinkedNotebook * linkedNotebook;
  gboolean __isset_linkedNotebook;
};
typedef struct _NoteStoreCreateLinkedNotebookArgs NoteStoreCreateLinkedNotebookArgs;

struct _NoteStoreCreateLinkedNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateLinkedNotebookArgsClass NoteStoreCreateLinkedNotebookArgsClass;

GType note_store_create_linked_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS (note_store_create_linked_notebook_args_get_type())
#define NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS, NoteStoreCreateLinkedNotebookArgs))
#define NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS, NoteStoreCreateLinkedNotebookArgsClass))
#define IS_NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS))
#define NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_ARGS, NoteStoreCreateLinkedNotebookArgsClass))

/* struct NoteStoreCreateLinkedNotebookResult */
struct _NoteStoreCreateLinkedNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  LinkedNotebook * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreCreateLinkedNotebookResult NoteStoreCreateLinkedNotebookResult;

struct _NoteStoreCreateLinkedNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreCreateLinkedNotebookResultClass NoteStoreCreateLinkedNotebookResultClass;

GType note_store_create_linked_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT (note_store_create_linked_notebook_result_get_type())
#define NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT, NoteStoreCreateLinkedNotebookResult))
#define NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT, NoteStoreCreateLinkedNotebookResultClass))
#define IS_NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT))
#define NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_CREATE_LINKED_NOTEBOOK_RESULT, NoteStoreCreateLinkedNotebookResultClass))

/* struct NoteStoreUpdateLinkedNotebookArgs */
struct _NoteStoreUpdateLinkedNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  LinkedNotebook * linkedNotebook;
  gboolean __isset_linkedNotebook;
};
typedef struct _NoteStoreUpdateLinkedNotebookArgs NoteStoreUpdateLinkedNotebookArgs;

struct _NoteStoreUpdateLinkedNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateLinkedNotebookArgsClass NoteStoreUpdateLinkedNotebookArgsClass;

GType note_store_update_linked_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS (note_store_update_linked_notebook_args_get_type())
#define NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS, NoteStoreUpdateLinkedNotebookArgs))
#define NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS, NoteStoreUpdateLinkedNotebookArgsClass))
#define IS_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS))
#define NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_ARGS, NoteStoreUpdateLinkedNotebookArgsClass))

/* struct NoteStoreUpdateLinkedNotebookResult */
struct _NoteStoreUpdateLinkedNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreUpdateLinkedNotebookResult NoteStoreUpdateLinkedNotebookResult;

struct _NoteStoreUpdateLinkedNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateLinkedNotebookResultClass NoteStoreUpdateLinkedNotebookResultClass;

GType note_store_update_linked_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT (note_store_update_linked_notebook_result_get_type())
#define NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT, NoteStoreUpdateLinkedNotebookResult))
#define NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT, NoteStoreUpdateLinkedNotebookResultClass))
#define IS_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT))
#define NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_LINKED_NOTEBOOK_RESULT, NoteStoreUpdateLinkedNotebookResultClass))

/* struct NoteStoreListLinkedNotebooksArgs */
struct _NoteStoreListLinkedNotebooksArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreListLinkedNotebooksArgs NoteStoreListLinkedNotebooksArgs;

struct _NoteStoreListLinkedNotebooksArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListLinkedNotebooksArgsClass NoteStoreListLinkedNotebooksArgsClass;

GType note_store_list_linked_notebooks_args_get_type (void);
#define TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS (note_store_list_linked_notebooks_args_get_type())
#define NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS, NoteStoreListLinkedNotebooksArgs))
#define NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS, NoteStoreListLinkedNotebooksArgsClass))
#define IS_NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS))
#define IS_NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS))
#define NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_ARGS, NoteStoreListLinkedNotebooksArgsClass))

/* struct NoteStoreListLinkedNotebooksResult */
struct _NoteStoreListLinkedNotebooksResult
{ 
  ThriftStruct parent; 

  /* public */
  GPtrArray * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreListLinkedNotebooksResult NoteStoreListLinkedNotebooksResult;

struct _NoteStoreListLinkedNotebooksResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreListLinkedNotebooksResultClass NoteStoreListLinkedNotebooksResultClass;

GType note_store_list_linked_notebooks_result_get_type (void);
#define TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT (note_store_list_linked_notebooks_result_get_type())
#define NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT, NoteStoreListLinkedNotebooksResult))
#define NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT, NoteStoreListLinkedNotebooksResultClass))
#define IS_NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT))
#define IS_NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT))
#define NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_LIST_LINKED_NOTEBOOKS_RESULT, NoteStoreListLinkedNotebooksResultClass))

/* struct NoteStoreExpungeLinkedNotebookArgs */
struct _NoteStoreExpungeLinkedNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreExpungeLinkedNotebookArgs NoteStoreExpungeLinkedNotebookArgs;

struct _NoteStoreExpungeLinkedNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeLinkedNotebookArgsClass NoteStoreExpungeLinkedNotebookArgsClass;

GType note_store_expunge_linked_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS (note_store_expunge_linked_notebook_args_get_type())
#define NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS, NoteStoreExpungeLinkedNotebookArgs))
#define NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS, NoteStoreExpungeLinkedNotebookArgsClass))
#define IS_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS))
#define NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_ARGS, NoteStoreExpungeLinkedNotebookArgsClass))

/* struct NoteStoreExpungeLinkedNotebookResult */
struct _NoteStoreExpungeLinkedNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  gint32 success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreExpungeLinkedNotebookResult NoteStoreExpungeLinkedNotebookResult;

struct _NoteStoreExpungeLinkedNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreExpungeLinkedNotebookResultClass NoteStoreExpungeLinkedNotebookResultClass;

GType note_store_expunge_linked_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT (note_store_expunge_linked_notebook_result_get_type())
#define NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT, NoteStoreExpungeLinkedNotebookResult))
#define NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT, NoteStoreExpungeLinkedNotebookResultClass))
#define IS_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT))
#define NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EXPUNGE_LINKED_NOTEBOOK_RESULT, NoteStoreExpungeLinkedNotebookResultClass))

/* struct NoteStoreAuthenticateToSharedNotebookArgs */
struct _NoteStoreAuthenticateToSharedNotebookArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * shareKeyOrGlobalId;
  gboolean __isset_shareKeyOrGlobalId;
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreAuthenticateToSharedNotebookArgs NoteStoreAuthenticateToSharedNotebookArgs;

struct _NoteStoreAuthenticateToSharedNotebookArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreAuthenticateToSharedNotebookArgsClass NoteStoreAuthenticateToSharedNotebookArgsClass;

GType note_store_authenticate_to_shared_notebook_args_get_type (void);
#define TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS (note_store_authenticate_to_shared_notebook_args_get_type())
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS, NoteStoreAuthenticateToSharedNotebookArgs))
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS, NoteStoreAuthenticateToSharedNotebookArgsClass))
#define IS_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS))
#define IS_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS))
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_ARGS, NoteStoreAuthenticateToSharedNotebookArgsClass))

/* struct NoteStoreAuthenticateToSharedNotebookResult */
struct _NoteStoreAuthenticateToSharedNotebookResult
{ 
  ThriftStruct parent; 

  /* public */
  AuthenticationResult * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreAuthenticateToSharedNotebookResult NoteStoreAuthenticateToSharedNotebookResult;

struct _NoteStoreAuthenticateToSharedNotebookResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreAuthenticateToSharedNotebookResultClass NoteStoreAuthenticateToSharedNotebookResultClass;

GType note_store_authenticate_to_shared_notebook_result_get_type (void);
#define TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT (note_store_authenticate_to_shared_notebook_result_get_type())
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT, NoteStoreAuthenticateToSharedNotebookResult))
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT, NoteStoreAuthenticateToSharedNotebookResultClass))
#define IS_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT))
#define IS_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT))
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTEBOOK_RESULT, NoteStoreAuthenticateToSharedNotebookResultClass))

/* struct NoteStoreGetSharedNotebookByAuthArgs */
struct _NoteStoreGetSharedNotebookByAuthArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreGetSharedNotebookByAuthArgs NoteStoreGetSharedNotebookByAuthArgs;

struct _NoteStoreGetSharedNotebookByAuthArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetSharedNotebookByAuthArgsClass NoteStoreGetSharedNotebookByAuthArgsClass;

GType note_store_get_shared_notebook_by_auth_args_get_type (void);
#define TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS (note_store_get_shared_notebook_by_auth_args_get_type())
#define NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS, NoteStoreGetSharedNotebookByAuthArgs))
#define NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS, NoteStoreGetSharedNotebookByAuthArgsClass))
#define IS_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS))
#define IS_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS))
#define NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_ARGS, NoteStoreGetSharedNotebookByAuthArgsClass))

/* struct NoteStoreGetSharedNotebookByAuthResult */
struct _NoteStoreGetSharedNotebookByAuthResult
{ 
  ThriftStruct parent; 

  /* public */
  SharedNotebook * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreGetSharedNotebookByAuthResult NoteStoreGetSharedNotebookByAuthResult;

struct _NoteStoreGetSharedNotebookByAuthResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetSharedNotebookByAuthResultClass NoteStoreGetSharedNotebookByAuthResultClass;

GType note_store_get_shared_notebook_by_auth_result_get_type (void);
#define TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT (note_store_get_shared_notebook_by_auth_result_get_type())
#define NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT, NoteStoreGetSharedNotebookByAuthResult))
#define NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT, NoteStoreGetSharedNotebookByAuthResultClass))
#define IS_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT))
#define IS_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT))
#define NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_SHARED_NOTEBOOK_BY_AUTH_RESULT, NoteStoreGetSharedNotebookByAuthResultClass))

/* struct NoteStoreEmailNoteArgs */
struct _NoteStoreEmailNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  NoteEmailParameters * parameters;
  gboolean __isset_parameters;
};
typedef struct _NoteStoreEmailNoteArgs NoteStoreEmailNoteArgs;

struct _NoteStoreEmailNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreEmailNoteArgsClass NoteStoreEmailNoteArgsClass;

GType note_store_email_note_args_get_type (void);
#define TYPE_NOTE_STORE_EMAIL_NOTE_ARGS (note_store_email_note_args_get_type())
#define NOTE_STORE_EMAIL_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EMAIL_NOTE_ARGS, NoteStoreEmailNoteArgs))
#define NOTE_STORE_EMAIL_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EMAIL_NOTE_ARGS, NoteStoreEmailNoteArgsClass))
#define IS_NOTE_STORE_EMAIL_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EMAIL_NOTE_ARGS))
#define IS_NOTE_STORE_EMAIL_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EMAIL_NOTE_ARGS))
#define NOTE_STORE_EMAIL_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EMAIL_NOTE_ARGS, NoteStoreEmailNoteArgsClass))

/* struct NoteStoreEmailNoteResult */
struct _NoteStoreEmailNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreEmailNoteResult NoteStoreEmailNoteResult;

struct _NoteStoreEmailNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreEmailNoteResultClass NoteStoreEmailNoteResultClass;

GType note_store_email_note_result_get_type (void);
#define TYPE_NOTE_STORE_EMAIL_NOTE_RESULT (note_store_email_note_result_get_type())
#define NOTE_STORE_EMAIL_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_EMAIL_NOTE_RESULT, NoteStoreEmailNoteResult))
#define NOTE_STORE_EMAIL_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_EMAIL_NOTE_RESULT, NoteStoreEmailNoteResultClass))
#define IS_NOTE_STORE_EMAIL_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_EMAIL_NOTE_RESULT))
#define IS_NOTE_STORE_EMAIL_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_EMAIL_NOTE_RESULT))
#define NOTE_STORE_EMAIL_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_EMAIL_NOTE_RESULT, NoteStoreEmailNoteResultClass))

/* struct NoteStoreShareNoteArgs */
struct _NoteStoreShareNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreShareNoteArgs NoteStoreShareNoteArgs;

struct _NoteStoreShareNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreShareNoteArgsClass NoteStoreShareNoteArgsClass;

GType note_store_share_note_args_get_type (void);
#define TYPE_NOTE_STORE_SHARE_NOTE_ARGS (note_store_share_note_args_get_type())
#define NOTE_STORE_SHARE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SHARE_NOTE_ARGS, NoteStoreShareNoteArgs))
#define NOTE_STORE_SHARE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SHARE_NOTE_ARGS, NoteStoreShareNoteArgsClass))
#define IS_NOTE_STORE_SHARE_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SHARE_NOTE_ARGS))
#define IS_NOTE_STORE_SHARE_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SHARE_NOTE_ARGS))
#define NOTE_STORE_SHARE_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SHARE_NOTE_ARGS, NoteStoreShareNoteArgsClass))

/* struct NoteStoreShareNoteResult */
struct _NoteStoreShareNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  gchar * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreShareNoteResult NoteStoreShareNoteResult;

struct _NoteStoreShareNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreShareNoteResultClass NoteStoreShareNoteResultClass;

GType note_store_share_note_result_get_type (void);
#define TYPE_NOTE_STORE_SHARE_NOTE_RESULT (note_store_share_note_result_get_type())
#define NOTE_STORE_SHARE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_SHARE_NOTE_RESULT, NoteStoreShareNoteResult))
#define NOTE_STORE_SHARE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_SHARE_NOTE_RESULT, NoteStoreShareNoteResultClass))
#define IS_NOTE_STORE_SHARE_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_SHARE_NOTE_RESULT))
#define IS_NOTE_STORE_SHARE_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_SHARE_NOTE_RESULT))
#define NOTE_STORE_SHARE_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_SHARE_NOTE_RESULT, NoteStoreShareNoteResultClass))

/* struct NoteStoreStopSharingNoteArgs */
struct _NoteStoreStopSharingNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * guid;
  gboolean __isset_guid;
};
typedef struct _NoteStoreStopSharingNoteArgs NoteStoreStopSharingNoteArgs;

struct _NoteStoreStopSharingNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreStopSharingNoteArgsClass NoteStoreStopSharingNoteArgsClass;

GType note_store_stop_sharing_note_args_get_type (void);
#define TYPE_NOTE_STORE_STOP_SHARING_NOTE_ARGS (note_store_stop_sharing_note_args_get_type())
#define NOTE_STORE_STOP_SHARING_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_STOP_SHARING_NOTE_ARGS, NoteStoreStopSharingNoteArgs))
#define NOTE_STORE_STOP_SHARING_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_STOP_SHARING_NOTE_ARGS, NoteStoreStopSharingNoteArgsClass))
#define IS_NOTE_STORE_STOP_SHARING_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_STOP_SHARING_NOTE_ARGS))
#define IS_NOTE_STORE_STOP_SHARING_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_STOP_SHARING_NOTE_ARGS))
#define NOTE_STORE_STOP_SHARING_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_STOP_SHARING_NOTE_ARGS, NoteStoreStopSharingNoteArgsClass))

/* struct NoteStoreStopSharingNoteResult */
struct _NoteStoreStopSharingNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreStopSharingNoteResult NoteStoreStopSharingNoteResult;

struct _NoteStoreStopSharingNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreStopSharingNoteResultClass NoteStoreStopSharingNoteResultClass;

GType note_store_stop_sharing_note_result_get_type (void);
#define TYPE_NOTE_STORE_STOP_SHARING_NOTE_RESULT (note_store_stop_sharing_note_result_get_type())
#define NOTE_STORE_STOP_SHARING_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_STOP_SHARING_NOTE_RESULT, NoteStoreStopSharingNoteResult))
#define NOTE_STORE_STOP_SHARING_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_STOP_SHARING_NOTE_RESULT, NoteStoreStopSharingNoteResultClass))
#define IS_NOTE_STORE_STOP_SHARING_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_STOP_SHARING_NOTE_RESULT))
#define IS_NOTE_STORE_STOP_SHARING_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_STOP_SHARING_NOTE_RESULT))
#define NOTE_STORE_STOP_SHARING_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_STOP_SHARING_NOTE_RESULT, NoteStoreStopSharingNoteResultClass))

/* struct NoteStoreAuthenticateToSharedNoteArgs */
struct _NoteStoreAuthenticateToSharedNoteArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * guid;
  gboolean __isset_guid;
  gchar * noteKey;
  gboolean __isset_noteKey;
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
};
typedef struct _NoteStoreAuthenticateToSharedNoteArgs NoteStoreAuthenticateToSharedNoteArgs;

struct _NoteStoreAuthenticateToSharedNoteArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreAuthenticateToSharedNoteArgsClass NoteStoreAuthenticateToSharedNoteArgsClass;

GType note_store_authenticate_to_shared_note_args_get_type (void);
#define TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS (note_store_authenticate_to_shared_note_args_get_type())
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS, NoteStoreAuthenticateToSharedNoteArgs))
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS, NoteStoreAuthenticateToSharedNoteArgsClass))
#define IS_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS))
#define IS_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS))
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_ARGS, NoteStoreAuthenticateToSharedNoteArgsClass))

/* struct NoteStoreAuthenticateToSharedNoteResult */
struct _NoteStoreAuthenticateToSharedNoteResult
{ 
  ThriftStruct parent; 

  /* public */
  AuthenticationResult * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreAuthenticateToSharedNoteResult NoteStoreAuthenticateToSharedNoteResult;

struct _NoteStoreAuthenticateToSharedNoteResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreAuthenticateToSharedNoteResultClass NoteStoreAuthenticateToSharedNoteResultClass;

GType note_store_authenticate_to_shared_note_result_get_type (void);
#define TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT (note_store_authenticate_to_shared_note_result_get_type())
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT, NoteStoreAuthenticateToSharedNoteResult))
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT, NoteStoreAuthenticateToSharedNoteResultClass))
#define IS_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT))
#define IS_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT))
#define NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_AUTHENTICATE_TO_SHARED_NOTE_RESULT, NoteStoreAuthenticateToSharedNoteResultClass))

/* struct NoteStoreFindRelatedArgs */
struct _NoteStoreFindRelatedArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  RelatedQuery * query;
  gboolean __isset_query;
  RelatedResultSpec * resultSpec;
  gboolean __isset_resultSpec;
};
typedef struct _NoteStoreFindRelatedArgs NoteStoreFindRelatedArgs;

struct _NoteStoreFindRelatedArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreFindRelatedArgsClass NoteStoreFindRelatedArgsClass;

GType note_store_find_related_args_get_type (void);
#define TYPE_NOTE_STORE_FIND_RELATED_ARGS (note_store_find_related_args_get_type())
#define NOTE_STORE_FIND_RELATED_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_FIND_RELATED_ARGS, NoteStoreFindRelatedArgs))
#define NOTE_STORE_FIND_RELATED_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_FIND_RELATED_ARGS, NoteStoreFindRelatedArgsClass))
#define IS_NOTE_STORE_FIND_RELATED_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_FIND_RELATED_ARGS))
#define IS_NOTE_STORE_FIND_RELATED_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_FIND_RELATED_ARGS))
#define NOTE_STORE_FIND_RELATED_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_FIND_RELATED_ARGS, NoteStoreFindRelatedArgsClass))

/* struct NoteStoreFindRelatedResult */
struct _NoteStoreFindRelatedResult
{ 
  ThriftStruct parent; 

  /* public */
  RelatedResult * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
};
typedef struct _NoteStoreFindRelatedResult NoteStoreFindRelatedResult;

struct _NoteStoreFindRelatedResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreFindRelatedResultClass NoteStoreFindRelatedResultClass;

GType note_store_find_related_result_get_type (void);
#define TYPE_NOTE_STORE_FIND_RELATED_RESULT (note_store_find_related_result_get_type())
#define NOTE_STORE_FIND_RELATED_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_FIND_RELATED_RESULT, NoteStoreFindRelatedResult))
#define NOTE_STORE_FIND_RELATED_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_FIND_RELATED_RESULT, NoteStoreFindRelatedResultClass))
#define IS_NOTE_STORE_FIND_RELATED_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_FIND_RELATED_RESULT))
#define IS_NOTE_STORE_FIND_RELATED_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_FIND_RELATED_RESULT))
#define NOTE_STORE_FIND_RELATED_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_FIND_RELATED_RESULT, NoteStoreFindRelatedResultClass))

/* struct NoteStoreUpdateNoteIfUsnMatchesArgs */
struct _NoteStoreUpdateNoteIfUsnMatchesArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  Note * note;
  gboolean __isset_note;
};
typedef struct _NoteStoreUpdateNoteIfUsnMatchesArgs NoteStoreUpdateNoteIfUsnMatchesArgs;

struct _NoteStoreUpdateNoteIfUsnMatchesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateNoteIfUsnMatchesArgsClass NoteStoreUpdateNoteIfUsnMatchesArgsClass;

GType note_store_update_note_if_usn_matches_args_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS (note_store_update_note_if_usn_matches_args_get_type())
#define NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS, NoteStoreUpdateNoteIfUsnMatchesArgs))
#define NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS, NoteStoreUpdateNoteIfUsnMatchesArgsClass))
#define IS_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS))
#define IS_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS))
#define NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_ARGS, NoteStoreUpdateNoteIfUsnMatchesArgsClass))

/* struct NoteStoreUpdateNoteIfUsnMatchesResult */
struct _NoteStoreUpdateNoteIfUsnMatchesResult
{ 
  ThriftStruct parent; 

  /* public */
  UpdateNoteIfUsnMatchesResult * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreUpdateNoteIfUsnMatchesResult NoteStoreUpdateNoteIfUsnMatchesResult;

struct _NoteStoreUpdateNoteIfUsnMatchesResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreUpdateNoteIfUsnMatchesResultClass NoteStoreUpdateNoteIfUsnMatchesResultClass;

GType note_store_update_note_if_usn_matches_result_get_type (void);
#define TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT (note_store_update_note_if_usn_matches_result_get_type())
#define NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT, NoteStoreUpdateNoteIfUsnMatchesResult))
#define NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT, NoteStoreUpdateNoteIfUsnMatchesResultClass))
#define IS_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT))
#define IS_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT))
#define NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_UPDATE_NOTE_IF_USN_MATCHES_RESULT, NoteStoreUpdateNoteIfUsnMatchesResultClass))

/* struct NoteStoreManageNotebookSharesArgs */
struct _NoteStoreManageNotebookSharesArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  ManageNotebookSharesParameters * parameters;
  gboolean __isset_parameters;
};
typedef struct _NoteStoreManageNotebookSharesArgs NoteStoreManageNotebookSharesArgs;

struct _NoteStoreManageNotebookSharesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreManageNotebookSharesArgsClass NoteStoreManageNotebookSharesArgsClass;

GType note_store_manage_notebook_shares_args_get_type (void);
#define TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS (note_store_manage_notebook_shares_args_get_type())
#define NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS, NoteStoreManageNotebookSharesArgs))
#define NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS, NoteStoreManageNotebookSharesArgsClass))
#define IS_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS))
#define IS_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS))
#define NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_ARGS, NoteStoreManageNotebookSharesArgsClass))

/* struct NoteStoreManageNotebookSharesResult */
struct _NoteStoreManageNotebookSharesResult
{ 
  ThriftStruct parent; 

  /* public */
  ManageNotebookSharesResult * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreManageNotebookSharesResult NoteStoreManageNotebookSharesResult;

struct _NoteStoreManageNotebookSharesResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreManageNotebookSharesResultClass NoteStoreManageNotebookSharesResultClass;

GType note_store_manage_notebook_shares_result_get_type (void);
#define TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT (note_store_manage_notebook_shares_result_get_type())
#define NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT, NoteStoreManageNotebookSharesResult))
#define NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT, NoteStoreManageNotebookSharesResultClass))
#define IS_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT))
#define IS_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT))
#define NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_MANAGE_NOTEBOOK_SHARES_RESULT, NoteStoreManageNotebookSharesResultClass))

/* struct NoteStoreGetNotebookSharesArgs */
struct _NoteStoreGetNotebookSharesArgs
{ 
  ThriftStruct parent; 

  /* public */
  gchar * authenticationToken;
  gboolean __isset_authenticationToken;
  gchar * notebookGuid;
  gboolean __isset_notebookGuid;
};
typedef struct _NoteStoreGetNotebookSharesArgs NoteStoreGetNotebookSharesArgs;

struct _NoteStoreGetNotebookSharesArgsClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNotebookSharesArgsClass NoteStoreGetNotebookSharesArgsClass;

GType note_store_get_notebook_shares_args_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS (note_store_get_notebook_shares_args_get_type())
#define NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS, NoteStoreGetNotebookSharesArgs))
#define NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS, NoteStoreGetNotebookSharesArgsClass))
#define IS_NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS))
#define IS_NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS))
#define NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_ARGS, NoteStoreGetNotebookSharesArgsClass))

/* struct NoteStoreGetNotebookSharesResult */
struct _NoteStoreGetNotebookSharesResult
{ 
  ThriftStruct parent; 

  /* public */
  ShareRelationships * success;
  gboolean __isset_success;
  EDAMUserException * userException;
  gboolean __isset_userException;
  EDAMNotFoundException * notFoundException;
  gboolean __isset_notFoundException;
  EDAMSystemException * systemException;
  gboolean __isset_systemException;
};
typedef struct _NoteStoreGetNotebookSharesResult NoteStoreGetNotebookSharesResult;

struct _NoteStoreGetNotebookSharesResultClass
{
  ThriftStructClass parent;
};
typedef struct _NoteStoreGetNotebookSharesResultClass NoteStoreGetNotebookSharesResultClass;

GType note_store_get_notebook_shares_result_get_type (void);
#define TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT (note_store_get_notebook_shares_result_get_type())
#define NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT, NoteStoreGetNotebookSharesResult))
#define NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT, NoteStoreGetNotebookSharesResultClass))
#define IS_NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT))
#define IS_NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT))
#define NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_NOTE_STORE_GET_NOTEBOOK_SHARES_RESULT, NoteStoreGetNotebookSharesResultClass))

#endif /* NOTE_STORE_TYPES_H */
